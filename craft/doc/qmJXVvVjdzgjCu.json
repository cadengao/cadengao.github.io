{
  "schemaVersion": "1",
  "spaceId": "d8d537f0-b7d4-e6fe-0216-30e666a82048",
  "documentId": "EA1507E3-372E-4820-A000-D68127977336",
  "blocks": [
    {
      "id": "0011BD03-500E-42FC-842A-76A28C15C8F1",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread中Start方法的流程图",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774289,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774289
    },
    {
      "id": "0211B815-995D-4434-9FE8-0ED96095DC2B",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    for (int i = 1; i <=10; i++)\n    {\n        //ThreadPool执行任务\n        ThreadPool.QueueUserWorkItem(new WaitCallback((obj) => {\n            Console.WriteLine($\"第{obj}个执行任务\");\n        }),i);\n    }\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774296,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532949821
    },
    {
      "id": "043B3D94-0BB0-48B6-975C-C99B965ECE5F",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread取消任务的方法",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774290,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774290
    },
    {
      "id": "08C83D58-8EF4-4A04-911C-8F181D151643",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "首先看一下怎么去创建并运行一个Task，Task的创建和执行方式有如下三种：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774300,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774300
    },
    {
      "id": "0C22823B-B02A-4026-85D0-FB781C596B2A",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQrPuYnqMiA7Ai5zKeu99uKCUtvncjeCH6KE3ks69dhACkp1cfpxwfvPrYvexRtkP5dxQHfaz7YzdfEyk3mBJV7DZcM5XNFGS16UZGJ7DXJRkP8bxgCFeGxg4fGNjw68TAvtUUvdnP6LSXUoN3UtH4UvFRy",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.706422018348624\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"295.0\",\"primaryColor\":\"263172\",\"rawDataSize\":\"100704\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUcHKuY5PBhaVMQTmmYThEtCS9qKLg8iMv7vsQso21mayHS3BuareKPCDM63WFthq2rRCWivypBxLcC4gw4gyfKoowqA6xBJYz4b3pq8S1tW22X1NPf5VgC1XHMJAFv7anxYGTPWTvpgNMRUrNRiUPiwMT5/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQrPuYnqMiA7Ai5zKeu99uKCUtvncjeCH6KE3ks69dhACkp1cfpxwfvPrYvexRtkP5dxQHfaz7YzdfEyk3mBJV7DZcM5XNFGS16UZGJ7DXJRkP8bxgCFeGxg4fGNjw68TAvtUUvdnP6LSXUoN3UtH4UvFRy/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532900437,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532904941
    },
    {
      "id": "10ABA367-ED26-4E8B-8A3D-CBE35CD3612F",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static async void Main(string[] args)\n{\n    Console.WriteLine(\"Main前\");\n    await  ShowDelayAsync();\n    Console.WriteLine(\"Main后\");\n    Console.ReadKey();\n}\nprivate static async Task ShowDelayAsync()\n{\n    Console.WriteLine(\"async前\");\n    await Task.Delay(1000);\n    Console.WriteLine(\"async后\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774323,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533361277
    },
    {
      "id": "145C34F5-8FF5-4224-A33E-401E819715F4",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果如下，第5次执行在取消回调后打印，这是因为，执行取消的时候第5次任务已经通过了while()判断，任务已经执行中了：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774318,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774318
    },
    {
      "id": "1BE3A9B0-1154-4EEC-9819-CCED1201A62B",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "或",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774323,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774323
    },
    {
      "id": "1CB6BA7D-DB26-444C-A026-3922C175DC15",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "C#-异步编程【Area】",
      "pageStyleData": "{\"background\":{\"size\":\"full\",\"solidColor\":\"#f7f9f7\",\"type\":\"solid\"},\"isMirrored\":true,\"pageWidthType\":\"true\",\"styleId\":\"luki\"}",
      "rawProperties": "{\"coverImageEnabled\":\"false\",\"hasBeenPagifiedBefore\":\"1\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532772101,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"pageRegular\"}",
      "blocks": [
        "AE267338-6ECC-4E14-8381-86294CE2F780",
        "85815924-489A-4B8F-977C-FB2CC540A5E7",
        "9291C39F-0913-4DBD-8678-6FA96DB54AB8",
        "C2FACBD5-7B2E-4F81-999B-8F53D3E2989E",
        "3DBDC51D-A180-410B-AA4D-5968472A6241",
        "78A410CF-0DE0-492A-BAF8-C733B99F48B3",
        "CDBB8E8D-FA20-45A6-8142-0AF414452A26",
        "DC9CBC4A-6FE7-4946-B0E8-FA9691F0F9B5",
        "21F9FDD8-F839-418C-A695-37EF8371EA59",
        "C07BBE00-CE08-4452-8A05-5D064F367B43",
        "EDB55BAC-C659-4BC8-A7A2-AA17EA72C1B1",
        "3293440A-652D-433F-A887-914B849F1AE6",
        "6E2EF38C-9F6D-4141-8D32-847B88B166B2",
        "969F131D-CFFE-42F9-A8AE-E5B0E4589503",
        "0C22823B-B02A-4026-85D0-FB781C596B2A",
        "2660EAE5-058E-4A8F-9AF9-AD562EE4BDAB",
        "0011BD03-500E-42FC-842A-76A28C15C8F1",
        "043B3D94-0BB0-48B6-975C-C99B965ECE5F",
        "D218F4B4-0278-4CC4-BE44-FBA44017C898",
        "72A7DE54-7881-4BD7-A587-80F8267F65DF",
        "4B541C16-1B3C-4D4A-B69F-D5041FE987B0",
        "43861FD7-5792-4579-ACD9-617EBB701691",
        "C7BEE824-248A-4E60-8C41-292506D27085",
        "646E8CAC-FB30-49BF-A21F-66EB08EF1AC3",
        "88A0E72D-204F-4FF9-B50D-C76823D6B132",
        "E0F63CB0-CB4A-433B-B4EA-5918BDDCD21C",
        "2D209712-470F-40C2-8C0F-3F6CAD889B5D",
        "D7A3B2A9-B5CA-4601-8FA8-B7CFC321FE7A",
        "1F0D4F3E-0A25-4D55-A2BE-071DFADD3176",
        "0211B815-995D-4434-9FE8-0ED96095DC2B",
        "D39D042A-AACB-49B9-B8E2-9366B8E0EF1C",
        "80C51F4E-9B48-4D7B-8AE6-BAC560F70F1A",
        "769B8EF6-195C-4723-8B66-257FA48E8176",
        "C8616023-FAEE-4FA1-8ACE-23A27964B4F9",
        "6E21D17C-69D8-4FCC-9C2F-33E02F1F7171",
        "E7EF51C4-A549-4F6D-B7C3-6359D279BB00",
        "08C83D58-8EF4-4A04-911C-8F181D151643",
        "5C6949BE-9707-4906-B62B-55BC22A7597B",
        "B25FE5D9-DC46-4DBE-A497-F31D291F22BC",
        "1F881269-662F-41C7-909B-693A6A87DBA5",
        "B1610B47-8439-4A39-9A00-46FFFC5BD744",
        "EE612028-95B9-4943-85CB-952236BC3C75",
        "24DFE255-3284-4CEE-8AEB-C15C4C25AE61",
        "CED17772-26DF-4962-B909-DB2258D60BF3",
        "61026F48-98D5-45B7-A47F-9E148EFA1B06",
        "A0C5ECAA-1B34-4610-8F9D-DF913FC734F9",
        "BB9146BB-18BF-442D-B6A9-173B8EB03C74",
        "27DAC0A5-9921-4EAD-9F3F-3A86FCEFC2B9",
        "D3A524EA-951E-42FA-B6B8-22A5293B40E3",
        "73A039AF-297E-485D-9F14-AD619656D98A",
        "733169E3-F02B-4113-976F-654201BD32DF",
        "3C629D11-5CBB-47CB-8E8F-0D1F4BA694D9",
        "613C208C-87BE-4E88-86A9-EA08188EAAF5",
        "4D602AC7-5607-4D10-9A18-F8C51E22DBFB",
        "7CF0EFF5-D49A-4C83-8A9B-BBFD7473E937",
        "B595D05E-495B-49A7-9627-60813EFA447E",
        "7BA322DD-5295-43D8-B420-13175EBB3AA8",
        "6367FCF3-2A78-498B-970C-C1B12B3CA40F",
        "6F8DD23D-EBF5-4538-B6AB-7EFDBEDFC160",
        "5883334D-C09C-44EE-9C94-F078986ECC50",
        "A4D88352-83BA-45BE-8F1D-4726FCA6A96B",
        "A6D3DB0D-C7CC-4544-91B0-77ADD2FFCA8E",
        "53A77C23-7D11-464E-899E-C020D7279197",
        "4A68C9A5-9FC7-4405-84FA-FD92360BC0E4",
        "853D781A-2B6D-40B8-B575-C72D5C9D7C13",
        "3C850517-C472-45EC-A599-79F079972B7F",
        "145C34F5-8FF5-4224-A33E-401E819715F4",
        "B9A31CED-D91E-4FD2-979B-9CD5B10343A4",
        "FCB68228-2B5D-436C-B9D2-96107A9A1F8F",
        "C86250A0-9D71-47BF-82C7-D31652E9373E",
        "4D5AB024-8DB1-4920-802D-D0D79A816230",
        "C36D87EC-648D-4110-A76E-4F822AEC2ACA",
        "A0AF9069-CB87-4593-9038-093E49E34005",
        "1E555AEF-DBDB-4BF2-9268-26F1C0BFC06E",
        "1BE3A9B0-1154-4EEC-9819-CCED1201A62B",
        "10ABA367-ED26-4E8B-8A3D-CBE35CD3612F",
        "B88E8F5F-AA80-4A21-AB7C-36DDCD367E7E",
        "5ACCC782-6F57-45CD-8AE0-188836E9C8DB",
        "CBFB6B0F-B9DE-4C5C-B57F-A866175C6DF1",
        "EF20895A-128D-4E46-B03E-224224FC4058",
        "B394B909-F3BA-4ABF-8A7F-89B6B2448AD6",
        "F53B5BBF-C772-4014-8F46-BDB0A5A6EE5A",
        "372B2520-1C4C-4E2A-926A-A2D997979273",
        "955211AF-CC2C-44E3-984C-D377C9BCE8EA",
        "D4CB5004-7854-45F7-96CE-51579B38378D",
        "FA507B3E-7443-46F8-B5F0-1BE3B8513D06",
        "B00BC5B8-2FB0-4997-ACDE-2D196E026DEF",
        "415F11DD-75D7-436F-BAB1-011323B8EC0E",
        "7C8A816F-7280-4220-904E-C535A9E851B3",
        "50D10735-E7B1-4267-B7A1-297692BF4D36",
        "7B8973C6-BE66-4ED5-BDFC-85B88A163AEA",
        "FF34138B-2379-43C2-9295-795CE9F5A937",
        "4050A375-4356-483E-B8CC-FEB1417047A3",
        "8CE90F74-59A0-4EC5-A08D-61FDAEDAE2E5",
        "FCA10AE2-E40C-41A0-8585-C4A7F9067107",
        "797CB78A-37F8-4C10-AEB2-4218C2039FB5",
        "B24E2792-D45F-42D0-91A8-AEB005F71424",
        "7F20DA3A-B4B0-4EC8-8D16-8CE62E5D90E7",
        "ABE9C97B-868C-44FD-83A0-9897A31148FC",
        "79C0658C-29BC-4E45-BD61-2A5D8FE887C9",
        "9BD4355E-64A4-46D5-AD4D-272C4B5B0FBD",
        "32C05699-7529-45EB-8C8D-E5C0C0F50303",
        "51E9BBAC-0757-43AA-BD8B-563D465B009D",
        "441BE563-31B7-4B7C-9BCA-30D1B54623B1",
        "74B2E3D6-739A-4F0B-8078-B7222C43E47E",
        "9BB9DC62-7A8B-4E9B-B65B-54572B78B7E5"
      ],
      "pageStyleProps": "{\"color\":\"#1F2225 #F4F4F4\",\"backdrop\":\"#f7f9f7 #f7f9f7\",\"theme-id\":\"3C07060B-6733-42A8-B033-C8EC0A19272D\",\"card-assets\":\"none\",\"font-family\":\"system\",\"page-width-type\":\"true\",\"separator-style\":\"line\",\"background-color\":\"#FFFFFF #222222\"}",
      "updated": 1750335609658
    },
    {
      "id": "1E555AEF-DBDB-4BF2-9268-26F1C0BFC06E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Console.WriteLine(\"Main前\");\n    ShowDelayAsync().Wait();\n    Console.WriteLine(\"Main后\");\n    Console.ReadKey();\n}\nprivate static async Task ShowDelayAsync()\n{\n    Console.WriteLine(\"async前\");\n    await Task.Delay(1000);\n    Console.WriteLine(\"async后\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774322,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533355527
    },
    {
      "id": "1F0D4F3E-0A25-4D55-A2BE-071DFADD3176",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "ThreadPool中有若干数量的线程，如果有任务需要处理时，会从线程池中获取一个空闲的线程来执行任务，任务执行完毕后线程不会销毁，而是被线程池回收以供后续任务使用。当线程池中所有的线程都在忙碌时，又有新任务要处理时，线程池才会新建一个线程来处理该任务，如果线程数量达到设置的最大值，任务会排队，等待其他任务释放线程后再执行。线程池能减少线程的创建，节省开销，看一个ThreadPool的例子吧。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774296,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774296
    },
    {
      "id": "1F881269-662F-41C7-909B-693A6A87DBA5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQdeWn7wAdcWvJKCxYwhJGKvea1xdbzbheDWBBVY2PQomej9VNYTKHBoWw72gSB8FVgVNyPHr45uUg51QWggokQ7L1qc67wBumTMeiru4JfVtv7iqEHQ4UiRGyE8f93X2UpGbpom42qSArsXTNE41R9o67e",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.418032786885246\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"295.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"112208\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUhWkH73za7JM4pADmS83GrFNRrWjvhh8ijVTj8P46K57RRZjmKup7gYwPSYwzeiPkh5FdzP4tTL2rzRFnQbC74REE2RZ2Y9zjwE3TbgziHwDpv6vzttdHEcd3ajHiK6Rgjsqzt29zsARoo1yija6TfSa6J/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQdeWn7wAdcWvJKCxYwhJGKvea1xdbzbheDWBBVY2PQomej9VNYTKHBoWw72gSB8FVgVNyPHr45uUg51QWggokQ7L1qc67wBumTMeiru4JfVtv7iqEHQ4UiRGyE8f93X2UpGbpom42qSArsXTNE41R9o67e/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532975437,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532978928
    },
    {
      "id": "21F9FDD8-F839-418C-A695-37EF8371EA59",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    //创建线程，并指定线程开始执行时要调用的方法。也可以指定一个委托或者Lambda表达式\n    Thread thread = new Thread(Function);\n    //指定线程为后台线程，如果不指定为前台线程。\n    thread.IsBackground = true;\n    //指定线程优先级别\n    /*\n     * 线程在C#中有5个优先级：（从低到高）Lowest -> BelowNormal -> Normal ->AboveNormal -> Highest\n     * 默认状态下是：Normal。在单核CPU中效果明显，多核CPU中效果不太明显，如果希望线程尽快执行，可以把\n     * 优先级设定高一点。\n     */\n    thread.Priority = ThreadPriority.AboveNormal;\n    //启动线程。（实际操作中，并不是立即启动，而是告诉CPU，这个线程准备好了，具体什么时候启动由CPU统一调度）\n    thread.Start();\n    Console.ReadKey();\n}\n\nprivate static void Function()\n{\n    while(true)\n    {\n        Console.WriteLine(DateTime.Now.ToString());\n        Thread.Sleep(1000);\n    }      \n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774285,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533164776
    },
    {
      "id": "24DFE255-3284-4CEE-8AEB-C15C4C25AE61",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "注意task.Resut获取结果时会阻塞线程，即如果task没有执行完成，会等待task执行完成获取到Result，然后再执行后边的代码，程序运行结果如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774304,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774304
    },
    {
      "id": "2660EAE5-058E-4A8F-9AF9-AD562EE4BDAB",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread的Join方法可以阻塞调用线程，但是有一些弊端：①如果我们要实现很多线程的阻塞时，每个线程都要调用一次Join方法；②如果我们想让所有的线程执行完毕(或者任一线程执行完毕)时，立即解除阻塞，使用Join方法不容易实现。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774289,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774289
    },
    {
      "id": "27DAC0A5-9921-4EAD-9F3F-3A86FCEFC2B9",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQrSdZPxgnne9AGN2cht8J9ZrGEJBxY8qPicsGjGnGzRJaqooERY4SrwPEm76RZ7ycrTp6hzo2VBhiGLy189BMxUpCDzRigSqKXTqN1S3wTR4qV5HLfnhHpX7HFK6kExARtYX3VV1n1SkLfT1iz8ZSXaZ1e",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"3.2061855670103094\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"311.0\",\"primaryColor\":\"263172\",\"rawDataSize\":\"94740\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUPZd7hJE6GdsTJkzbKzKkiEFHc9ouDTAiCngmiCZ2kftyEP19Yp3mri8GkCzWXKCpBnVMbntCbykdieoEWFfX1nX1zER6tCY7pBNnjb94dugy7UqtkmbfTHnzKf8U3zEbf64Kp67ocdKGRXptmXENkGuY2/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQrSdZPxgnne9AGN2cht8J9ZrGEJBxY8qPicsGjGnGzRJaqooERY4SrwPEm76RZ7ycrTp6hzo2VBhiGLy189BMxUpCDzRigSqKXTqN1S3wTR4qV5HLfnhHpX7HFK6kExARtYX3VV1n1SkLfT1iz8ZSXaZ1e/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533253976,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533258352
    },
    {
      "id": "2D209712-470F-40C2-8C0F-3F6CAD889B5D",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "要正确停止线程，不在于调用者采用了什么行为，而是更多依赖工作线程是否主动响应调用者的停止请求，大体的机制是，如果线程需要被停止，那么线程本身就应该负责给调用者开放这样的接口，Canclen。线程在工作的同时，还要以某种频率检查Canclen标识。若检测到Canclen，线程才会停止，对于 ThreadPool（线程池）同样。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774295,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774295
    },
    {
      "id": "3293440A-652D-433F-A887-914B849F1AE6",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "用 thread.Join()方法即可阻塞主线程。看一个例子：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774287,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[2,13]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774287
    },
    {
      "id": "32C05699-7529-45EB-8C8D-E5C0C0F50303",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "总而言之：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774337,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774337
    },
    {
      "id": "372B2520-1C4C-4E2A-926A-A2D997979273",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果为：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774327,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774327
    },
    {
      "id": "3C629D11-5CBB-47CB-8E8F-0D1F4BA694D9",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774309,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774309
    },
    {
      "id": "3C850517-C472-45EC-A599-79F079972B7F",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    CancellationTokenSource source = new CancellationTokenSource();\n    //注册任务取消的事件\n    source.Token.Register(() =>\n    {\n        Console.WriteLine(\"任务被取消后执行xx操作！\");\n    });\n    int index = 0;\n    //开启一个task执行任务\n    Task task1 = new Task(() =>\n      {\n          while (!source.IsCancellationRequested)\n          {\n              Thread.Sleep(1000);\n              Console.WriteLine($\"第{++index}次执行，线程运行中...\");\n          }\n      });\n    task1.Start();\n    //延时取消，效果等同于Thread.Sleep(5000);source.Cancel();\n    source.CancelAfter(5000);\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774318,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533325282
    },
    {
      "id": "3DBDC51D-A180-410B-AA4D-5968472A6241",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "后者性能高于前者",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1749110492233,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"block\":1,\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749110851848
    },
    {
      "id": "4050A375-4356-483E-B8CC-FEB1417047A3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在一个async方法中，会根据await关键字进行分割，拆分到不同的线程处理同一个方法的不同部分！如下例：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774332,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,49]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,49]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":4}",
      "blocks": [],
      "updated": 1749110933095
    },
    {
      "id": "415F11DD-75D7-436F-BAB1-011323B8EC0E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task:如果调用方法不想通过异步方法获取一个值，仅仅想追踪异步方法的执行状态，那么我们可以设置异步方法签名的返回值为Task;",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774330,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":1,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":2}",
      "blocks": [],
      "updated": 1687532774330
    },
    {
      "id": "43861FD7-5792-4579-ACD9-617EBB701691",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "警惕两点：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774292,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774292
    },
    {
      "id": "441BE563-31B7-4B7C-9BCA-30D1B54623B1",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在异步(async)方法执行中，遇到await关键字，调用线程会立即返回(线程池)继续后续的处理逻辑；而后，调用方可以使用Task.Wait()或Task.Result进行阻塞，等待异步方法执行完毕再继续。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774338,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,103]}],\"color\":\"#0400ff #aaa9ff\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749111019276
    },
    {
      "id": "4A68C9A5-9FC7-4405-84FA-FD92360BC0E4",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    CancellationTokenSource source = new CancellationTokenSource();\n    int index = 0;\n    //开启一个task执行任务\n    Task task1 = new Task(() =>\n      {\n          while (!source.IsCancellationRequested)\n          {\n              Thread.Sleep(1000);\n              Console.WriteLine($\"第{++index}次执行，线程运行中...\");\n          }\n      });\n    task1.Start();\n    //五秒后取消任务执行\n    Thread.Sleep(5000);\n    //source.Cancel()方法请求取消任务，IsCancellationRequested会变成true\n    source.Cancel();\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774316,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533318458
    },
    {
      "id": "4B541C16-1B3C-4D4A-B69F-D5041FE987B0",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQd8Nb4iGyEz59M6Ace5fzq4e2uctENziVmzuggp6BsAfPSvrtC5pXDYBbTTHf1DrHMU5ieABxWEny7NRwjyUZsYgMNek9dCzD9g8VbjjVPuBxpNKU53z54YkYJtoGwMWqoFmSvrQYnrEbTt2wGHC3QGQdm",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.5706806282722514\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageHasTransparency\":\"1\",\"previewImageWidth\":\"1200.0\",\"primaryColor\":\"10592673\",\"rawDataSize\":\"19230534\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUWARjvpgqjEirnh31VZSFrcVnSuY83agViktaYZeBdxGosepoCnvpYvPFxNut2ajjSXEhBUotyEuRk3wAxPWioKERwBCiMaEFYaPoVCFfzyU8inZCXUhTicWxE7YtC79f11J6d1FftLW9okQq4om6Rejdf/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQd8Nb4iGyEz59M6Ace5fzq4e2uctENziVmzuggp6BsAfPSvrtC5pXDYBbTTHf1DrHMU5ieABxWEny7NRwjyUZsYgMNek9dCzD9g8VbjjVPuBxpNKU53z54YkYJtoGwMWqoFmSvrQYnrEbTt2wGHC3QGQdm/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532920546,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532938908
    },
    {
      "id": "4D5AB024-8DB1-4920-802D-D0D79A816230",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Console.WriteLine(\"Main前\");\n    ShowDelayAsync();\n    Console.WriteLine(\"Main后\");\n    Console.ReadKey();\n}\nprivate static async void ShowDelayAsync()\n{\n    Console.WriteLine(\"async前\");\n    await Task.Delay(1000);\n    Console.WriteLine(\"async后\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774320,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533337182
    },
    {
      "id": "4D602AC7-5607-4D10-9A18-F8C51E22DBFB",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "如果将例子中的WaitAll换成WaitAny，那么任一task执行完毕就会解除线程阻塞，执行结果是：先打印【线程1执行完毕】，然后打印【主线程执行完毕】，最后打印【线程2执行完毕】。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774310,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774311
    },
    {
      "id": "50D10735-E7B1-4267-B7A1-297692BF4D36",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "即：异步方法的返回值类型必须为Task或Task<T>；",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774331,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[15,4]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[20,8]}],\"color\":\"#ef052a #ff3f69\",\"decorations\":{\"block\":1,\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1718941733629
    },
    {
      "id": "51E9BBAC-0757-43AA-BD8B-563D465B009D",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在异步(async)方法执行中，会根据await关键字，拆分一个方法为多个部分，分别由不同的线程执行。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774338,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,51]}],\"color\":\"#ff9200 #ff9200\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749111015627
    },
    {
      "id": "53A77C23-7D11-464E-899E-C020D7279197",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task中有一个专门的类  CancellationTokenSource 来取消任务执行，还是使用上边的例子，我们修改代码如下，程序运行的效果不变。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774316,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[14,23]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774316
    },
    {
      "id": "5883334D-C09C-44EE-9C94-F078986ECC50",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上边的例子也可以通过  Task.Factory.ContinueWhenAll(Task[] tasks, Action continuationAction) 和  Task.Factory.ContinueWhenAny(Task[] tasks, Action continuationAction) 来实现 ，修改上边例子代码如下，执行结果不变。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774314,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[12,70]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[85,69]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533202977
    },
    {
      "id": "5ACCC782-6F57-45CD-8AE0-188836E9C8DB",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR4eUAzY9wLsiSUDCx99jCjzVMC2b3hFe9RooDTQHaB65s5PDTpP232bzonHjCMq9HLymoQgdxpHrUzhxFCNqWkVfkVoEdWv6bU2DMKmpfVZVpE1K3nbN2yGSQS1QRYE2DMnayPfK5VtVFZxqY3ZA18C93H",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"0.9043478260869565\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"104.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"40118\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDU743jTaAbT4yuSXPooGV36dn3W1d4p6uK9wh9HQdHNtA9PXuZRWcQYsmVK9GDhxTnk7S8Xaqg35mp6tWhBpNHrmiJAqpVsPJAwXDYFFLraxExoxqwECH9MhsCodX4bFRsujuAKGpu74rYVYmWTMY2hKMtZ/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR4eUAzY9wLsiSUDCx99jCjzVMC2b3hFe9RooDTQHaB65s5PDTpP232bzonHjCMq9HLymoQgdxpHrUzhxFCNqWkVfkVoEdWv6bU2DMKmpfVZVpE1K3nbN2yGSQS1QRYE2DMnayPfK5VtVFZxqY3ZA18C93H/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533370477,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533373450
    },
    {
      "id": "5C6949BE-9707-4906-B62B-55BC22A7597B",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    //1.new方式实例化一个Task，需要通过Start方法启动\n    Task task = new Task(() =>\n    {\n        Thread.Sleep(100);\n        Console.WriteLine($\"hello, task1的线程ID为{Thread.CurrentThread.ManagedThreadId}\");\n    });\n    task.Start();\n    //2.Task.Factory.StartNew(Action action)创建和启动一个Task\n    Task task2 = Task.Factory.StartNew(() =>\n      {\n          Thread.Sleep(100);\n          Console.WriteLine($\"hello, task2的线程ID为{ Thread.CurrentThread.ManagedThreadId}\");\n      });\n    //3.Task.Run(Action action)将任务放在线程池队列，返回并启动一个Task\n    Task task3 = Task.Run(() =>\n      {\n          Thread.Sleep(100);\n          Console.WriteLine($\"hello, task3的线程ID为{ Thread.CurrentThread.ManagedThreadId}\");\n      });\n    Console.WriteLine(\"执行主线程！\");\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774300,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532964148
    },
    {
      "id": "61026F48-98D5-45B7-A47F-9E148EFA1B06",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上边的所有例子中Task的执行都是异步的，不会阻塞主线程。有些场景下我们想让Task同步执行怎么办呢？Task提供了 task.RunSynchronously()用于同步执行Task任务，代码如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774305,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[59,23]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533187532
    },
    {
      "id": "613C208C-87BE-4E88-86A9-EA08188EAAF5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQMu6UXQF6wf5ELx1YqxwzhbpLfgeMhoiTUNeKeysddjrepquyrKUJQZ3mVjYwthWJvWTyDR9zxbQ58bic1zPHyqoF2aG71RmEVqGtc7FKWxpQ1WAD5474nSVNcxpBo1uq522VehRAt3Aird1SZkhGbT1aa",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.709090909090909\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"298.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"102578\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDU7p2SRckEtrweKMvHfrCJeSuUcHfN2NZC2DrsbsrLHCxQjPazSehjTBExg6hXYEGajonFSXBoTR7Uh93HY8cpCWvUxSjBdNBiJN2JTh9aBDdxdf9bdeTyqrzvgbH14MC6nsc7DkVU6NJf8SPu7bdj6CP4T/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQMu6UXQF6wf5ELx1YqxwzhbpLfgeMhoiTUNeKeysddjrepquyrKUJQZ3mVjYwthWJvWTyDR9zxbQ58bic1zPHyqoF2aG71RmEVqGtc7FKWxpQ1WAD5474nSVNcxpBo1uq522VehRAt3Aird1SZkhGbT1aa/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533274151,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533278927
    },
    {
      "id": "6367FCF3-2A78-498B-970C-C1B12B3CA40F",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果如下，我们看到WhenAll/WhenAny方法不会阻塞主线程，当使用WhenAll方法时所有的task都执行完毕才会执行后续操作；如果把例子中的WhenAll替换成WhenAny，则只要有一个线程执行完毕就会开始执行后续操作，这里不再演示。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774313,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533195579
    },
    {
      "id": "646E8CAC-FB30-49BF-A21F-66EB08EF1AC3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "现在的大多数系统不是一个实时的操作系统，Window也是如此。所以不要奢望线程能够立即启动。Window内部会实现特殊的算法进行线程之间的调度。在某个时刻它会决定当前运行那个线程。这反映到最底层就是某个线程分配到一定的CPU时间，可以用来执行一小段工作（由于被分配的CPU时间很短，所以操作系统中运行者上千个线程，我们也会觉得这些应用程序也是在同时执行的）。Window会选择适当的时间根据自己的算法决定下一段的CPU时间如何调度。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774293,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774293
    },
    {
      "id": "6E21D17C-69D8-4FCC-9C2F-33E02F1F7171",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task是在ThreadPool的基础上推出的，我们知道了ThreadPool的弊端：我们不能控制线程池中线程的执行顺序，也不能获取线程池内线程取消/异常/完成的通知。net4.0在ThreadPool的基础上推出了Task，Task拥有线程池的优点，同时也解决了使用线程池不易控制的弊端。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774299,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[43,40]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[43,41]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749110691007
    },
    {
      "id": "6E2EF38C-9F6D-4141-8D32-847B88B166B2",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Thread th1 = new Thread(() => {\n        Thread.Sleep(500);\n        Console.WriteLine(\"线程1执行完毕！\");\n    });\n    th1.Start();\n    Thread th2 = new Thread(() => {\n        Thread.Sleep(1000);\n        Console.WriteLine(\"线程2执行完毕！\");\n    });\n    th2.Start();\n    //阻塞主线程\n    th1.Join();\n    th2.Join();\n    Console.WriteLine(\"主线程执行完毕！\");\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774287,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532896145
    },
    {
      "id": "6F8DD23D-EBF5-4538-B6AB-7EFDBEDFC160",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQXAvVvGiqfnt9Fv2GTGoe6gF9BAtD5gqNePLLJzve3rWt4dVGtKb5DG5W1TQciWEukgKpNrrrMMefpWjpmHFZiCBSebnoWoQbGQnoYDuegtLqBx5c6an5fr1ishU33tSvhHnM5H78a5hMedWKoRtybCHqd",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.3548387096774195\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"292.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"112862\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUR6ZBMaqX9RqCy2JCLEt83zcpn26STrntmAGBG7GcyZPK9Lx4BLhuVodhepp4ceDydYVRkbhNUkfXKmnQ4xt1QTXVxdqNxeexDMLGG9cfCmNeuEq8NDz44ZKn7U5rsj9QVTmgucRbEekM4TPkVC2TQy8Xp/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQXAvVvGiqfnt9Fv2GTGoe6gF9BAtD5gqNePLLJzve3rWt4dVGtKb5DG5W1TQciWEukgKpNrrrMMefpWjpmHFZiCBSebnoWoQbGQnoYDuegtLqBx5c6an5fr1ishU33tSvhHnM5H78a5hMedWKoRtybCHqd/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533295207,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533299866
    },
    {
      "id": "72A7DE54-7881-4BD7-A587-80F8267F65DF",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    bool isStop = false;\n    int index = 0;\n    //开启一个线程执行任务\n    Thread th1 = new Thread(() =>\n      {\n          while (!isStop)\n          {\n              Thread.Sleep(1000);\n              Console.WriteLine($\"第{++index}次执行，线程运行中...\");\n          }\n      });\n    th1.Start();\n    //五秒后取消任务执行\n    Thread.Sleep(5000);\n    isStop = true;\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774291,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532940879
    },
    {
      "id": "733169E3-F02B-4113-976F-654201BD32DF",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Task task1 = new Task(() => {\n        Thread.Sleep(500);\n        Console.WriteLine(\"线程1执行完毕！\");\n    });\n    task1.Start();\n    Task task2 = new Task(() => {\n        Thread.Sleep(1000);\n        Console.WriteLine(\"线程2执行完毕！\");\n    });\n    task2.Start();\n    //阻塞主线程。task1,task2都执行完毕再执行主线程\n    //执行【task1.Wait();task2.Wait();】可以实现相同功能\n    Task.WaitAll(new Task[]{ task1,task2});\n    Console.WriteLine(\"主线程执行完毕！\");\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774309,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533261118
    },
    {
      "id": "73A039AF-297E-485D-9F14-AD619656D98A",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "task.Wait() 表示等待task执行完毕，功能类似于thead.Join()； Task.WaitAll(Task[] tasks) 表示只有所有的task都执行完成了再解除阻塞； Task.WaitAny(Task[] tasks) 表示只要有一个task执行完毕就解除阻塞，看一个例子：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774308,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,11]},{\"isCode\":true,\"range\":[44,26]},{\"isCode\":true,\"range\":[95,27]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774308
    },
    {
      "id": "74B2E3D6-739A-4F0B-8078-B7222C43E47E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在异步(async)方法执行后，若不使用Task.Wait()进行等待，或不使用Task.Result获取返回结果，则该方法将仅以异步方式执行。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774339,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,72]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749111021669
    },
    {
      "id": "769B8EF6-195C-4723-8B66-257FA48E8176",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "ThreadPool相对于Thread来说可以减少线程的创建，有效减小系统开销；但是ThreadPool不能控制线程的执行顺序，我们也不能获取线程池内线程取消/异常/完成的通知，即我们不能有效监控和控制线程池中的线程。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774298,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774298
    },
    {
      "id": "78A410CF-0DE0-492A-BAF8-C733B99F48B3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上述情况只在频繁使用线程的情况下适用",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1749110499847,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"block\":1,\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749111456930
    },
    {
      "id": "797CB78A-37F8-4C10-AEB2-4218C2039FB5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQuuV7GtmhS6ht4sjmqWzvqgLJRRSDoy6PPFZpBxVUzVS2TMBnHzscetabQhfpWNbcke4HBH3id4KrQkQmg6HP1ysTjKbsAMa1sE9ybBb1duniCiF4euZLPreNHJYdvH9Vxa4wApGSGbiszdtNNLbr6ifM8",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.2767857142857144\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"255.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"89918\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUGPG9uivXeMax7qHVLqeuNXXRjWmCK8fk65jekW4n4bpgB75WDmkAGW5w5M8U1ANNVbFUAVwJT7Rxco25ogeo8Yb17BJTdfkiGFZNHX3hyAaAujbnuyE7ZhjvwMNkKVCtwDxQuvNzhaicTrSvUMrJqANGt/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQuuV7GtmhS6ht4sjmqWzvqgLJRRSDoy6PPFZpBxVUzVS2TMBnHzscetabQhfpWNbcke4HBH3id4KrQkQmg6HP1ysTjKbsAMa1sE9ybBb1duniCiF4euZLPreNHJYdvH9Vxa4wApGSGbiszdtNNLbr6ifM8/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533434772,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533439079
    },
    {
      "id": "79C0658C-29BC-4E45-BD61-2A5D8FE887C9",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "把一个方法代码的不同部分拆分到多个线程处理，这是异步方法和同步方法的最大不同！",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774336,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,39]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":5}",
      "blocks": [],
      "updated": 1749110937967
    },
    {
      "id": "7B8973C6-BE66-4ED5-BDFC-85B88A163AEA",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "异步方法的“传染性“：一个方法中如果有await调用，则这个方法也必须修饰为async。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774331,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[10,34]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[11,33]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":2}",
      "blocks": [],
      "updated": 1749110923004
    },
    {
      "id": "7BA322DD-5295-43D8-B420-13175EBB3AA8",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Task task1 = new Task(() => {\n        Thread.Sleep(500);\n        Console.WriteLine(\"线程1执行完毕！\");\n    });\n    task1.Start();\n    Task task2 = new Task(() => {\n        Thread.Sleep(1000);\n        Console.WriteLine(\"线程2执行完毕！\");\n    });\n    task2.Start();\n    //task1，task2执行完了后执行后续操作\n    Task.WhenAll(task1, task2).ContinueWith((t) => {\n        Thread.Sleep(100);\n        Console.WriteLine(\"执行后续操作完毕！\");\n    });\n    Console.WriteLine(\"主线程执行完毕！\");\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774312,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533283415
    },
    {
      "id": "7C8A816F-7280-4220-904E-C535A9E851B3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "void:如果调用方法仅仅只是调用一下异步方法，不和异步方法做其他交互，我们可以设置异步方法签名的返回值为void，这种形式也叫做“调用并忘记”。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774330,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":1,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":3}",
      "blocks": [],
      "updated": 1687532774330
    },
    {
      "id": "7CF0EFF5-D49A-4C83-8A9B-BBFD7473E937",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task的延续操作(WhenAny/WhenAll/ContinueWith)",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774311,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,39]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774311
    },
    {
      "id": "7F20DA3A-B4B0-4EC8-8D16-8CE62E5D90E7",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在同步方法Main中执行的时候都是同一个线程；",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1749110882798,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,23]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749110891320
    },
    {
      "id": "80C51F4E-9B48-4D7B-8AE6-BAC560F70F1A",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQaqwD5dEVxZVUL6powb65GqAE2AfUmZ8ku1WJiJS3hHgCjzK9QyWauUWBSuActFX8931JhvmUsEvFs84ap4mVYe8EfSNLaWHQGr3esefGXcpE5xr4hquJSzR5zGxLsC4hcSbxneSSwDknPqEbwxYm5gyM3",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.3852459016393444\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"338.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"251670\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUaETAAdaWQRhk6muP3aJSvJUgXqpnG2KbQM1ZmVrhcHyzhGHp1kgiw5hPMQnhgGDR32GtXHawHCDqsJRhZnXi1Wvpb7tKxFyJKsDWC5TNqXHy722wbxTNhYvuVCsXS3hoXV3GBJV41jZRqvtMGFHpqSLhH/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQaqwD5dEVxZVUL6powb65GqAE2AfUmZ8ku1WJiJS3hHgCjzK9QyWauUWBSuActFX8931JhvmUsEvFs84ap4mVYe8EfSNLaWHQGr3esefGXcpE5xr4hquJSzR5zGxLsC4hcSbxneSSwDknPqEbwxYm5gyM3/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532953615,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532959947
    },
    {
      "id": "853D781A-2B6D-40B8-B575-C72D5C9D7C13",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "CancellationTokenSource的功能不仅仅是取消任务执行，我们可以使用  source.CancelAfter(5000)实现5秒后自动取消任务，也可以通过 source.Token.Register(Action action)注册取消任务触发的回调函数，即任务被取消时注册的action会被执行。 看一个例子：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774317,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[45,24]},{\"isCode\":true,\"range\":[87,36]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774317
    },
    {
      "id": "85815924-489A-4B8F-977C-FB2CC540A5E7",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "同步和异步主要用于修饰方法。当一个方法被调用时，调用者需要等待该方法执行完毕并返回才能继续执行，我们称这个方法是同步方法；当一个方法被调用时立即返回，并获取一个线程执行该方法内部的业务，调用者不用等待该方法执行完毕，我们称这个方法为异步方法。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774281,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774281
    },
    {
      "id": "88A0E72D-204F-4FF9-B50D-C76823D6B132",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "线程终止涉及两个问题：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774293,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,11]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":2}",
      "blocks": [],
      "updated": 1749110536623
    },
    {
      "id": "8CE90F74-59A0-4EC5-A08D-61FDAEDAE2E5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n     Console.WriteLine(\"{0}->Main.异步方法执行前\", Thread.CurrentThread.ManagedThreadId.ToString());//输出异步处理之前的线程ID\n     DoAsync(1000).Wait();//执行异步处理，并等待该异步方法执行完成后才继续\n     Console.WriteLine(\"{0}->Main.异步方法执行后\", Thread.CurrentThread.ManagedThreadId.ToString());//输出异步处理之后的线程ID\n     Console.Read();\n}\n/// <summary>\n/// 执行异步处理\n/// </summary>\n/// <param name=\"times\">模拟处理时长</param>\n/// <returns></returns>\npublic static async Task DoAsync(int times)\n{\n     Console.WriteLine(\"{0}->DoAsync.await之前\", Thread.CurrentThread.ManagedThreadId.ToString());//输出调用线程ID\n     await Task.Run(() => Thread.Sleep(times));///执行一个异步任务，并等待返回结果才继续；需要注意的是，调用线程执行到这一行的时候其实就已经返回了\n     Console.WriteLine(\"{0}->DoAsync.await之后\", Thread.CurrentThread.ManagedThreadId.ToString());//异步操作执行完了，但这里已经是新的线程了\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774333,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533414325
    },
    {
      "id": "9291C39F-0913-4DBD-8678-6FA96DB54AB8",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread < ThreadPoll < Task < Async await",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774282,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,40]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[9,10]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[22,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[29,11]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,40]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"block\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749111423122
    },
    {
      "id": "955211AF-CC2C-44E3-984C-D377C9BCE8EA",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQs5sVMZbFPhpVoTWPGpsDfnA82wRSeTkBXjzXSJ19Q3B5YwtnonX8pybCSoxestRboN6aq8jUtwp6brCz7CBLybc5AqioJJ6ZHbbtw3ML1dxLCT8ofhheE8KFL8PTat3nqKg9ZFRq3cxbcbJVSfFsJUtzs",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.0365853658536586\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"167.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"45320\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDU1gdJHZ7eGRYSF2U5cpdZgtbENSj5WSvrojVHJSP7dcf4eeDjW64mYYbMBBxwoTQF8zGzhz7mc2UAg67bopYt7ZRBiyYxzwzYHkLFkfq3uRNU44NpjGeKH15ht3eZEjAboLiQL3qrMDuGy1N3ESfpNeD1m/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQs5sVMZbFPhpVoTWPGpsDfnA82wRSeTkBXjzXSJ19Q3B5YwtnonX8pybCSoxestRboN6aq8jUtwp6brCz7CBLybc5AqioJJ6ZHbbtw3ML1dxLCT8ofhheE8KFL8PTat3nqKg9ZFRq3cxbcbJVSfFsJUtzs/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533403932,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533407088
    },
    {
      "id": "969F131D-CFFE-42F9-A8AE-E5B0E4589503",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "如果注释掉两个Join，执行结果是：先打印【主线程执行完毕】，而添加两个Join方法后执行结果如下，实现了线程阻塞：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774288,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774288
    },
    {
      "id": "9BB9DC62-7A8B-4E9B-B65B-54572B78B7E5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "小结：到这里Task，async/await的简单使用已经基本结束了，一些高级特性等到工作遇到了再去研究。通过上边的介绍，我们知道async/await是基于Task的，而Task是对ThreadPool的封装改进，主要是为了更有效的控制线程池中的线程(ThreadPool中的线程，我们很难通过代码控制其执行顺序，任务延续和取消等等)；ThreadPool基于Thread的，主要目的是减少Thread创建数量和管理Thread的成本。async/await、Task是C#中更先进的，也是微软大力推广的特性，我们在开发中可以尝试使用Task来替代Thread/ThreadPool，处理本地IO和网络IO任务是尽量使用async/await来提高任务执行效率。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774339,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[65,19]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[86,21]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[169,19]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[6,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[11,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[17,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[127,10]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[196,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[219,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[231,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[275,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[282,10]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[311,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[317,5]},{\"highlightColor\":\"#ff9898 #ff8686\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,3]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,2]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[65,19]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[86,21]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[169,19]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749111040184
    },
    {
      "id": "9BD4355E-64A4-46D5-AD4D-272C4B5B0FBD",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQVvr2JzL5LjTvELntQq9qkkcvihMGMgWFW57Q56MZbNiGW7TtjFcbFEHwU1RtviWH3nt69y4z4sGC6U4VkLYK63Nx9bXZfX7SVfYWUSVSr9eF4yXmKSzbx1636jmvB7AdmwSyhcFaBffK6s1EmWTxEEkRK",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"0.8569321533923304\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"581.0\",\"primaryColor\":\"16777215\",\"rawDataSize\":\"1186072\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUXb6e1UYcKMJyiBC9u1YQc1C5gDbF5S89wgGQrGozVqQnWYUkMiGgFffAg8L3kT6x2UZiaHy85vgqmMZQwRvdPUTgJXwJyfzwoAbY5LQ6f6cn6h53nSHBHQUe59xxwztPQ6ZmkSC76UwyV9T7uVTNsj2rH/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQVvr2JzL5LjTvELntQq9qkkcvihMGMgWFW57Q56MZbNiGW7TtjFcbFEHwU1RtviWH3nt69y4z4sGC6U4VkLYK63Nx9bXZfX7SVfYWUSVSr9eF4yXmKSzbx1636jmvB7AdmwSyhcFaBffK6s1EmWTxEEkRK/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533448956,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533453832
    },
    {
      "id": "A0AF9069-CB87-4593-9038-093E49E34005",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR2FiDomysFPADo1biDeumWouD45H2X7xhrKhZkC8hJPhc2JyaYLivdtqnrH1gg6t3BsDdRyFADxDE7Wi5v9KG8VcAnKrqczanw7FHgez6Qb9SYL6zGveziWt7NzeFGVnKVF4Fjbhw41oneXWQyEEjCGLx4",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.6168224299065421\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"173.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"59772\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDU2bVjPDAHE3Rt86LZ53fN2WzxseToZ3SFKJfvAXGRktqZE4c6C9iRMmWX6wKazHTCpXbsR8eaX14n8wMef5QyJTgSuebKS3qjKAXhRPXtHu4CMBD897qPmJ2Kh3zUxYQDA4bZnStrTsuFwa4CFNxrbKedT/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR2FiDomysFPADo1biDeumWouD45H2X7xhrKhZkC8hJPhc2JyaYLivdtqnrH1gg6t3BsDdRyFADxDE7Wi5v9KG8VcAnKrqczanw7FHgez6Qb9SYL6zGveziWt7NzeFGVnKVF4Fjbhw41oneXWQyEEjCGLx4/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533348737,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533351829
    },
    {
      "id": "A0C5ECAA-1B34-4610-8F9D-DF913FC734F9",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    Task task = new Task(() =>\n    {\n        Thread.Sleep(100);\n        Console.WriteLine(\"执行Task结束!\");\n    });\n    //同步执行，task会阻塞主线程\n    task.RunSynchronously();\n    Console.WriteLine(\"执行主线程结束！\");\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774306,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533088196
    },
    {
      "id": "A4D88352-83BA-45BE-8F1D-4726FCA6A96B",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n {\n     Task task1 = new Task(() => {\n         Thread.Sleep(500);\n         Console.WriteLine(\"线程1执行完毕！\");\n     });\n     task1.Start();\n     Task task2 = new Task(() => {\n         Thread.Sleep(1000);\n         Console.WriteLine(\"线程2执行完毕！\");\n     });\n     task2.Start();\n     //通过TaskFactroy实现\n     Task.Factory.ContinueWhenAll(new Task[] { task1, task2 }, (t) =>\n     {\n         Thread.Sleep(100);\n         Console.WriteLine(\"执行后续操作\");\n     });\n     Console.WriteLine(\"主线程执行完毕！\");\n     Console.ReadKey();\n }",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774314,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687533302463
    },
    {
      "id": "A6D3DB0D-C7CC-4544-91B0-77ADD2FFCA8E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task的任务取消(CancellationTokenSource)",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774315,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,34]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774315
    },
    {
      "id": "ABE9C97B-868C-44FD-83A0-9897A31148FC",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在异步方法DoAsync执行的时候，在await之前是调用线程，在await之后则是另一个线程。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1749110885059,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,48]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749110897626
    },
    {
      "id": "AE267338-6ECC-4E14-8381-86294CE2F780",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "什么是异步",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774280,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532774281
    },
    {
      "id": "B00BC5B8-2FB0-4997-ACDE-2D196E026DEF",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task：如果调用方法想通过调用异步方法获取一个T类型的返回值，那么签名必须为 Task<TResult>；",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774329,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[40,13]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":1,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":1}",
      "blocks": [],
      "updated": 1687532774329
    },
    {
      "id": "B1610B47-8439-4A39-9A00-46FFFC5BD744",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "我们看到先打印\"执行主线程\"，然后再打印各个任务，说明了Task不会阻塞主线程。上边的例子Task都没有返回值，我们也可以创建有返回值的 Task<TResult>，用法和没有返回值的基本一致,我们简单修改一下上边的例子，代码如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774302,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[69,13]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774303
    },
    {
      "id": "B24E2792-D45F-42D0-91A8-AEB005F71424",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "请注意：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774335,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff9898 #ff8686\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,4]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749110882801
    },
    {
      "id": "B25FE5D9-DC46-4DBE-A497-F31D291F22BC",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774301,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774301
    },
    {
      "id": "B394B909-F3BA-4ABF-8A7F-89B6B2448AD6",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在C#5.0中出现的 async和await ，让异步编程变得更简单。我们看一个获取文件内容的例子：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774326,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[11,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774326
    },
    {
      "id": "B595D05E-495B-49A7-9627-60813EFA447E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上边的Wait/WaitAny/WaitAll方法返回值为void，这些方法单纯的实现阻塞线程。我们现在想让所有task执行完毕(或者任一task执行完毕)后，开始执行后续操作，怎么实现呢？这时就可以用到WhenAny/WhenAll方法了，这些方法执行完成返回一个task实例。 task.WhenAll(Task[] tasks) 表示所有的task都执行完毕后再去执行后续的操作， task.WhenAny(Task[] tasks) 表示任一task执行完毕后就开始执行后续操作。看一个例子：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774312,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[141,26]},{\"isCode\":true,\"range\":[194,26]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774312
    },
    {
      "id": "B88E8F5F-AA80-4A21-AB7C-36DDCD367E7E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "运行结果：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774324,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774324
    },
    {
      "id": "B9A31CED-D91E-4FD2-979B-9CD5B10343A4",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR1mk8QP1nTuqphdBHkWsFpm3chWk3zAHcHTEhX6Ns3A9ogYvRpNUv2F8yKLqKY48DmSV93SVXRG3xKoG7wTAKQ4qrcMTu6A2ACPEAgBYHycg7iwRVW2wVre8YRvgSGhvpKfUSKKDBf1ybH7o1YkWnWidw9",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.8322981366459627\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"295.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"146740\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUPkeMWgA8zx7dKGUxGvazqZ96GJp1AzQbwkPCxRUMzsLjamYWmmozw95Wz2gXNxZ6vq2DBYRpYfWgL63VKq9BNAiu1g9cQQti8oQ8cPJEEhdZEUzZekbCRiFuhvjbsCEeUoqqjQHUoBqoTv69ycJh4aXfG/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR1mk8QP1nTuqphdBHkWsFpm3chWk3zAHcHTEhX6Ns3A9ogYvRpNUv2F8yKLqKY48DmSV93SVXRG3xKoG7wTAKQ4qrcMTu6A2ACPEAgBYHycg7iwRVW2wVre8YRvgSGhvpKfUSKKDBf1ybH7o1YkWnWidw9/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687533329040,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533334223
    },
    {
      "id": "BB9146BB-18BF-442D-B6A9-173B8EB03C74",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "执行结果如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774307,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774307
    },
    {
      "id": "C07BBE00-CE08-4452-8A05-5D064F367B43",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR87mWmJZqneNtgDQ3Wop2vRZTtnA2TnpdXK4niRekSxe49jX4D4SjwxkMjQKYBw8xzLSrL7ociX4vCqG3aCR8Bj3phNEykzpZDtEStMokf3AefMvnLWqw8qNLMCB4jBUFdvyNbtiNb85HePrDvyJTezDAa",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.2924528301886793\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"411.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"396356\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDULWc7CjzVbjLoo3CZrTxEffnxzMtJ5osCzrijSAenfctMBAkqnb9FNhtTaioEe1YT9rntCjpzMkJzdvDe5FLEiNqRmGd7t6cwuRGmVi96TunC7LAQTL4EEdxVoFFQXFz7Rw35SwgRWfWrbv9KbDu6eoP36/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxR87mWmJZqneNtgDQ3Wop2vRZTtnA2TnpdXK4niRekSxe49jX4D4SjwxkMjQKYBw8xzLSrL7ociX4vCqG3aCR8Bj3phNEykzpZDtEStMokf3AefMvnLWqw8qNLMCB4jBUFdvyNbtiNb85HePrDvyJTezDAa/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532874086,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532881298
    },
    {
      "id": "C2FACBD5-7B2E-4F81-999B-8F53D3E2989E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "注：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1749110424787,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff9898 #ff8686\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,2]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{\"block\":1,\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"caption\"}",
      "blocks": [],
      "updated": 1749110851846
    },
    {
      "id": "C36D87EC-648D-4110-A76E-4F822AEC2ACA",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "运行结果：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774321,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774321
    },
    {
      "id": "C7BEE824-248A-4E60-8C41-292506D27085",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "线程不会立即执行",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774292,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,8]}],\"color\":\"#ef052a #ff3f69\",\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":1}",
      "blocks": [],
      "updated": 1749110533964
    },
    {
      "id": "C8616023-FAEE-4FA1-8ACE-23A27964B4F9",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task介绍",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774298,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532774298
    },
    {
      "id": "C86250A0-9D71-47BF-82C7-D31652E9373E",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task.Delay不会阻塞线程（而Thread.Sleep(xxxx) 会阻塞线程），线程可以继续处理其他的工作。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774320,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774320
    },
    {
      "id": "CBFB6B0F-B9DE-4C5C-B57F-A866175C6DF1",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "注：对于异步方法A()，使用await A()会将当前线程释放，让其他线程可以继续工作，等待异步方法A()的执行完成后再继续执行后续代码。而使用A().wait()会阻塞当前线程，直到异步方法A()执行完成后才会继续执行后续代码。因此，推荐使用await A()来实现异步编程。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774325,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774325
    },
    {
      "id": "CDBB8E8D-FA20-45A6-8142-0AF414452A26",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread介绍",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774283,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532774284
    },
    {
      "id": "CED17772-26DF-4962-B909-DB2258D60BF3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQfqCEbQaAXMqNkGNLWsWSBSfZvLzLAnLsayT4Pxub2VctBptavszq3oZC2d1UU9sn79uVvaLMcRXxjnFh1qcJv9XS4w5krxHtJXvgqym5rYHUTFWUHkXUjS5e2LWJ6AuudokqsKmd2EYYNxmmVkKzjyZVz",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.210526315789474\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"294.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"121544\",\"rawUrl\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiuzDVZaFzcMuMjgvEGt5GvQD8XRN5kjWzp7nhsMNAiGB8do4RToCkPw2RSqCDJeUnNSpnkmvQAVunZ9xgzKHDBwfXaJU8LdNsd6jC6KBYntsDUhRvbzcgRgKuMM1PcxPVh9KrdRUWhobq12J7iEbK6Fzhsv3L3XWfEg9BnY1HFizCCvyXnpTRyG5awKFLrewiRkL4GUffR57VhdAyjpp5LcLJCrJRWh5PEKXhufLBiHKWDDB9mdJpmYdczb5jz8rw25oe94/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/PmddRQjSmhsm1cVQPcBrtgcqFcMN4WUsKSnactYPVWTiesBJjPpWwZaJQf3aNeRdKex5fWU4puofuF6Wfhf5hXCWa3KvWGaYxZR9dvNTytRDewQqZ2xKVaATjEWHT7bQP32eWjobmfEkuTvR1ziD63MxQfqCEbQaAXMqNkGNLWsWSBSfZvLzLAnLsayT4Pxub2VctBptavszq3oZC2d1UU9sn79uVvaLMcRXxjnFh1qcJv9XS4w5krxHtJXvgqym5rYHUTFWUHkXUjS5e2LWJ6AuudokqsKmd2EYYNxmmVkKzjyZVz/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532997848,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687533000835
    },
    {
      "id": "D218F4B4-0278-4CC4-BE44-FBA44017C898",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "一般流程是：设置一个变量来控制任务是否停止，如设置一个变量isStop，然后线程轮询查看isStop，如果isStop为true就停止，代码如下：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774291,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774291
    },
    {
      "id": "D39D042A-AACB-49B9-B8E2-9366B8E0EF1C",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上边的代码通过ThreadPool执行了10个任务，执行结果为：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774297,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774297
    },
    {
      "id": "D3A524EA-951E-42FA-B6B8-22A5293B40E3",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task的阻塞方法(Wait/WaitAll/WaitAny)",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774308,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[0,31]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774308
    },
    {
      "id": "D4CB5004-7854-45F7-96CE-51579B38378D",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "上边的例子也写出了同步读取的方式，将main函数中的注释去掉即可同步读取文件内容。我们可以看到异步读取代码和同步读取代码基本一致。async/await让异步编码变得更简单，我们可以像写同步代码一样去写异步代码。注意一个小问题：异步方法中方法签名返回值为 Task<T>，代码中的返回值为T。上边例子中 GetContentAsync的签名返回值为 Task<string>，而代码中返回值为string。牢记这一细节对我们分析异步代码很有帮助。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774328,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[65,11]},{\"isCode\":true,\"range\":[128,7]},{\"isCode\":true,\"range\":[144,1]},{\"isCode\":true,\"range\":[152,15]},{\"isCode\":true,\"range\":[175,12]},{\"isCode\":true,\"range\":[196,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774328
    },
    {
      "id": "D7A3B2A9-B5CA-4601-8FA8-B7CFC321FE7A",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "ThreadPool介绍",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774295,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532774295
    },
    {
      "id": "DC9CBC4A-6FE7-4946-B0E8-FA9691F0F9B5",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread创建的方法",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774284,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774284
    },
    {
      "id": "E0F63CB0-CB4A-433B-B4EA-5918BDDCD21C",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "正如线程不能立即启动一样，线程不是说停就停。无论采用什么样的方式通知线程停止，线程都会执行完毕后，在合适的情况下停止。 thread.Abort()方法，如果线程正在执行的是一段非托管代码，那么，CLR 就不会抛出 ThreadAbortException,只有当代码继续回到 CLR 时，才会引发ThreadAbortException。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774294,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[13,8]}],\"decorationStyles\":{},\"decorations\":{\"focus\":1},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749110553819
    },
    {
      "id": "E7EF51C4-A549-4F6D-B7C3-6359D279BB00",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task创建和运行",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774299,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774299
    },
    {
      "id": "EDB55BAC-C659-4BC8-A7A2-AA17EA72C1B1",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Thread阻塞线程的方法",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774286,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774286
    },
    {
      "id": "EE612028-95B9-4943-85CB-952236BC3C75",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "static void Main(string[] args)\n{\n    ////1.new方式实例化一个Task，需要通过Start方法启动\n    Task<string> task = new Task<string>(() =>\n    {\n        return $\"hello, task1的ID为{Thread.CurrentThread.ManagedThreadId}\";\n    });\n    task.Start();\n    ////2.Task.Factory.StartNew(Func func)创建和启动一个Task\n   Task<string> task2 =Task.Factory.StartNew<string>(() =>\n    {\n        return $\"hello, task2的ID为{ Thread.CurrentThread.ManagedThreadId}\";\n    });\n    ////3.Task.Run(Func func)将任务放在线程池队列，返回并启动一个Task\n   Task<string> task3= Task.Run<string>(() =>\n    {\n        return $\"hello, task3的ID为{ Thread.CurrentThread.ManagedThreadId}\";\n    });\n    Console.WriteLine(\"执行主线程！\");\n    Console.WriteLine(task.Result);\n    Console.WriteLine(task2.Result);\n    Console.WriteLine(task3.Result);\n    Console.ReadKey();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774303,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532993485
    },
    {
      "id": "EF20895A-128D-4E46-B03E-224224FC4058",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "async/await",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774325,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532774325
    },
    {
      "id": "F53B5BBF-C772-4014-8F46-BDB0A5A6EE5A",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "class Program\n{\n    static void Main(string[] args)\n    {\n        //test.txt内容是【hello world！】\n        string content = GetContentAsync(Environment.CurrentDirectory + @\"/test.txt\").Result;\n        //调用同步方法\n        //string content = GetContent(Environment.CurrentDirectory + @\"/test.txt\");\n        Console.WriteLine(content);\n        Console.ReadKey();\n    }\n    //异步读取文件内容\n    async static Task<string> GetContentAsync(string filename)\n    {\n        FileStream fs = new FileStream(filename, FileMode.Open);\n        var bytes = new byte[fs.Length];\n        //ReadAync方法异步读取内容，不阻塞线程\n        Console.WriteLine(\"开始读取文件\");\n        int len = await fs.ReadAsync(bytes, 0, bytes.Length);\n        string result = Encoding.UTF8.GetString(bytes);\n        return result;\n    }\n    //同步读取文件内容\n    static string GetContent(string filename)\n    {\n        FileStream fs = new FileStream(filename, FileMode.Open);\n        var bytes = new byte[fs.Length];\n        //Read方法同步读取内容，阻塞线程\n        int len =  fs.Read(bytes, 0, bytes.Length);\n        string result = Encoding.UTF8.GetString(bytes);\n        return result;\n    }\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774326,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1718941605663
    },
    {
      "id": "FA507B3E-7443-46F8-B5F0-1BE3B8513D06",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "所有带有Async关键字的异步方法返回类型：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774329,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":1}",
      "blocks": [],
      "updated": 1687532774329
    },
    {
      "id": "FCA10AE2-E40C-41A0-8585-C4A7F9067107",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "运行结果：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774334,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532774334
    },
    {
      "id": "FCB68228-2B5D-436C-B9D2-96107A9A1F8F",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "Task的暂停线程处理",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774319,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"subtitle\"}",
      "blocks": [],
      "updated": 1687532774319
    },
    {
      "id": "FF34138B-2379-43C2-9295-795CE9F5A937",
      "documentId": "EA1507E3-372E-4820-A000-D68127977336",
      "content": "在async方法中遇到await关键字后，当前线程立即返回(到调用方)，继续之前的处理逻辑；await关键字之后的代码逻辑，将交由新的线程处理；当新的线程处理完成后，可以从新的线程返回处理结果到调用(处)线程当中，结束等待。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532774332,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,112]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,112]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":3}",
      "blocks": [],
      "updated": 1749110928403
    }
  ],
  "inheritedPageStyle": {
    "pageWidthType": "true",
    "background": {
      "size": "full",
      "solidColor": "#f7f9f7",
      "type": "solid"
    },
    "styleId": "luki",
    "header": {}
  },
  "inheritedPageStyleProps": {
    "color": "#1F2225 #F4F4F4",
    "backdrop": "#f7f9f7 #f7f9f7",
    "theme-id": "3C07060B-6733-42A8-B033-C8EC0A19272D",
    "card-assets": "none",
    "font-family": "system",
    "page-width-type": "true",
    "separator-style": "line",
    "background-color": "#FFFFFF #222222"
  },
  "rootBlockId": "1CB6BA7D-DB26-444C-A026-3922C175DC15",
  "settings": {
    "documentAppearance": "default",
    "hiddenLogo": false,
    "freeTier": false,
    "teamId": "e5336d46-6f5f-1acd-7266-4d0fefce8055",
    "forceSwitches": {}
  },
  "features": {
    "enabled": [
      "fs-show-title",
      "fs-enable-column-view"
    ],
    "disabled": [
      "fs-add-comment",
      "fs-view-comment",
      "fs-object-links",
      "fs-show-author",
      "fs-show-custom-logo",
      "fs-show-duplicate-as-template",
      "fs-hide-logo",
      "fs-hide-table-of-contents",
      "fs-hide-presentation-mode"
    ]
  }
}