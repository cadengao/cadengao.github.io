{
  "schemaVersion": "1",
  "spaceId": "d8d537f0-b7d4-e6fe-0216-30e666a82048",
  "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
  "blocks": [
    {
      "id": "013AAF2F-E438-40BB-A6C5-EC4E3E10F5F8",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "演示代码如下所示，只有当Signal()方法被调用2次以后，Wait()方法的阻塞才被解除。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406496,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[12,8]},{\"isCode\":true,\"range\":[30,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406496
    },
    {
      "id": "0277ED36-3A3C-4596-86B0-995EE7B48AF9",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXRZWLvBmcmZWrKDQ77hw5nuo7D3oYB6CqKD4aU5HkEnWos4gbbzgAsmULtgjfnVek4d8VLbpkfSTVqDfXeoA5ogY8k9W2Hn4S2BNBmdEBq2ZMuzdAU7vrgZc3rnWNfhG1soLrQqSCceLjGmJyytYbEKEkH",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.5873362445414847\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"727.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1003200\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqWhYHGK4zJRiqwKZvCZBG4cKWYnKfPLXs8HvEmGazLAAzyNZL2XHgNtesUuZeiMtNqMzY2TA7jYFAG5sWURzBajiKTNvbD9XGeJ6C5qXGv6HzqK3unp5WVqywbTU4Xdk1SLtfLg64FAqJ2dNyZX2CfdXWb/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXRZWLvBmcmZWrKDQ77hw5nuo7D3oYB6CqKD4aU5HkEnWos4gbbzgAsmULtgjfnVek4d8VLbpkfSTVqDfXeoA5ogY8k9W2Hn4S2BNBmdEBq2ZMuzdAU7vrgZc3rnWNfhG1soLrQqSCceLjGmJyytYbEKEkH/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532619302,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532629341
    },
    {
      "id": "034F84F1-7A80-4742-ABA1-943F7DC85191",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "如果所有线程都希望以只读的方式访问数据，就根本没有必要阻塞它们；如果一个线程希望修改数据，那么这个线程才需要独占访问，这就是ReaderWriterLockSlim的典型应用场景。这个类就像下面这样来控制线程。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406504,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[62,20]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406504
    },
    {
      "id": "053C5F0E-A9BD-4EA6-BE80-FEC24B10E561",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用ReaderWriterLockSlim类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406503,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406503
    },
    {
      "id": "0A9E6BA9-2476-4819-B7C7-36F296A7A9D3",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下图所示，可见只有当操作1和操作2都完成以后，才执行输出所有操作都完成。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406497,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406497
    },
    {
      "id": "0E5BE987-5F0D-4693-831D-0A556032C48E",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用异步锁，如SemaphoreSlim.WaitAsync()。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406469,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[7,25]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":4}",
      "blocks": [],
      "updated": 1687532406469
    },
    {
      "id": "11095A4C-D529-43F2-80DA-B7C0CB5F42E5",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "System.Threading.Mutex在概念上和System.Threading.Monitor几乎一样，但是Mutex同步对文件或者其他跨进程的资源进行访问，也就是说Mutex是可跨进程的。因为其特性，它的一个用途是限制应用程序不能同时运行多个实例。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406478,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,22]},{\"isCode\":true,\"range\":[27,24]},{\"isCode\":true,\"range\":[58,5]},{\"isCode\":true,\"range\":[87,5]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406478
    },
    {
      "id": "118517BE-8C19-44A3-97E3-231105862ECD",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "如果系统提供了Slim版本的异步对象，那么请选用它，因为*Slim版本全部都是混合锁，在进入内核模式前实现了某种形式的自旋。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406470,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[7,4]},{\"isCode\":true,\"range\":[28,5]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":6}",
      "blocks": [],
      "updated": 1687532406470
    },
    {
      "id": "1BD82915-9FAC-4D2F-8C1F-DDDBBE0E8D44",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXwPynsQzVcyaAVhJ93Xk7eHo1LVN3JX6MdU3EcevUw9VWiefvdwAC6t2JneUWegNVtCQKV8fGo3KQv9FmPRVLSwpv9VcCSD83oNJUviVXUeXG2YEw8yz5pitqEyFTSybpPEbQNXNytz17qKNUWCup96Bnx",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.6170678336980306\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"739.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1017472\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqzuuPtEhQVM9P9auMv4PiUVXPRZsRZVh3y9xVBsSTGU7A7V9HsPFDkodZSEXFVENiHN9RYbcoBCw3X5H4wph3YzGdznMVKpX4ZiicdzsQwQ1A2Tc9DsHQkzHHUmHN5WHpvfYRkUAENy8AXyUtSzepGwzZ5/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXwPynsQzVcyaAVhJ93Xk7eHo1LVN3JX6MdU3EcevUw9VWiefvdwAC6t2JneUWegNVtCQKV8fGo3KQv9FmPRVLSwpv9VcCSD83oNJUviVXUeXG2YEw8yz5pitqEyFTSybpPEbQNXNytz17qKNUWCup96Bnx/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532487954,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532497712
    },
    {
      "id": "1DC64351-B46A-44ED-A204-AFCEB24DA343",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "Mutex对象支持递归，也就是说同一个线程可多次获取同一个锁，这在后面演示代码中可观察到。由于Mutex的基类System.Theading.WaitHandle实现了IDisposable接口，所以当不需要在使用它时要注意进行资源的释放。更多资料：戳一戳演示代码如下所示，简单的演示了如何创建单实例的应用程序和Mutex递归获取锁的实现。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406479,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,5]},{\"isBold\":true,\"range\":[21,9]},{\"isCode\":true,\"range\":[47,5]},{\"isCode\":true,\"range\":[55,26]},{\"isCode\":true,\"range\":[84,11]},{\"linkURL\":\"https://msdn.microsoft.com/zh-cn/library/system.threading.mutex.aspx\",\"range\":[125,3]},{\"isCode\":true,\"range\":[156,5]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406479
    },
    {
      "id": "1DEF8A81-7CED-40A4-8346-B8A1EE3D84D2",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下所示，当“歌手”线程完成后，并没有马上结束，而是等待“钢琴家”线程结束，当\"钢琴家\"线程结束后，才开始第2阶段的工作。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406502,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406502
    },
    {
      "id": "1E477CE0-E273-4C99-8804-349F4A008E09",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXiS5z4t5nfWycqm9xKDsS2qwUEx7aBc5y1qiCG4t6aJQDE13tyxUT1qER1agi21vCDqyo8KNZXsmsW6XdHL74z2WSTNGbMqcbPsAnKhMn4z7xwTrKtGArAjBaAQET9NuZHebsME2P7FqVi9Q2FZSLieP76",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.7924528301886793\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"760.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"971022\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqoaZKs3pRubtcxhkDGQjjtt5seq8AHgKZtCtBvyeasJb3umhoSNRYRWTmwEDGgeTyn8SCXqdYhyaMwbpDKk3xWn2qPK5qwjKQWTHvCp2n6kXnwEX8gEQEvdRjpTVBKUXsYvbDWixsESWMrKx1nEMMn5Da3/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXiS5z4t5nfWycqm9xKDsS2qwUEx7aBc5y1qiCG4t6aJQDE13tyxUT1qER1agi21vCDqyo8KNZXsmsW6XdHL74z2WSTNGbMqcbPsAnKhMn4z7xwTrKtGArAjBaAQET9NuZHebsME2P7FqVi9Q2FZSLieP76/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532557007,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532567013
    },
    {
      "id": "2160DD4D-3998-4B3B-9CF4-AD64F87FD117",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "SpinWait是一个常用的混合模式的类，它被设计成使用用户模式等待一段时间，人后切换至内核模式以节省CPU时间。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406512,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,8]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406512
    },
    {
      "id": "260D2532-FEBC-4695-AC09-C23598CB2696",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "private static void Main(string[] args)\n{\n    Console.WriteLine(\"错误的计数\");\n\n    var c = new Counter();\n    Execute(c);\n\n    Console.WriteLine(\"--------------------------\");\n\n\n    Console.WriteLine(\"正确的计数 - 有锁\");\n\n    var c2 = new CounterWithLock();\n    Execute(c2);\n\n    Console.WriteLine(\"--------------------------\");\n\n\n    Console.WriteLine(\"正确的计数 - 无锁\");\n\n    var c3 = new CounterNoLock();\n    Execute(c3);\n\n    Console.ReadLine();\n}\n\nstatic void Execute(CounterBase c)\n{\n    // 统计耗时\n    var sw = new Stopwatch();\n    sw.Start();\n\n    var t1 = new Thread(() => TestCounter(c));\n    var t2 = new Thread(() => TestCounter(c));\n    var t3 = new Thread(() => TestCounter(c));\n    t1.Start();\n    t2.Start();\n    t3.Start();\n    t1.Join();\n    t2.Join();\n    t3.Join();\n\n    sw.Stop();\n    Console.WriteLine($\"Total count: {c.Count} Time:{sw.ElapsedMilliseconds} ms\");\n}\n\nstatic void TestCounter(CounterBase c)\n{\n    for (int i = 0; i < 100000; i++)\n    {\n        c.Increment();\n        c.Decrement();\n    }\n}\n\nclass Counter : CounterBase\n{\n    public override void Increment()\n    {\n        _count++;\n    }\n\n    public override void Decrement()\n    {\n        _count--;\n    }\n}\n\nclass CounterNoLock : CounterBase\n{\n    public override void Increment()\n    {\n        // 使用Interlocked执行原子操作\n        Interlocked.Increment(ref _count);\n    }\n\n    public override void Decrement()\n    {\n        Interlocked.Decrement(ref _count);\n    }\n}\n\nclass CounterWithLock : CounterBase\n{\n    private readonly object _syncRoot = new Object();\n\n    public override void Increment()\n    {\n        // 使用Lock关键字 锁定私有变量\n        lock (_syncRoot)\n        {\n            // 同步块\n            Count++;\n        }\n    }\n\n    public override void Decrement()\n    {\n        lock (_syncRoot)\n        {\n            Count--;\n        }\n    }\n}\n\n\nabstract class CounterBase\n{\n    protected int _count;\n\n    public int Count\n    {\n        get\n        {\n            return _count;\n        }\n        set\n        {\n            _count = value;\n        }\n    }\n\n    public abstract void Increment();\n\n    public abstract void Decrement();\n}\n",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406475,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532462711
    },
    {
      "id": "26727D15-9B4B-4FAE-942E-2183D5D30906",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "演示代码如下所示，分别使用了三种方式进行计数：错误计数方式、lock锁方式和Interlocked原子方式。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406475,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[30,4]},{\"isCode\":true,\"range\":[38,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406475
    },
    {
      "id": "29E8CC6E-028D-4D83-A64D-A1285772AAB8",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "该类使用比较简单，演示代码演示了6个线程竞争访问只允许4个线程同时访问的数据库，如下所示。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406483,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406483
    },
    {
      "id": "30265E8C-0E22-459B-B41D-8FD7970A3D7E",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用SemaphoreSlim类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406481,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406481
    },
    {
      "id": "375381C5-E181-4456-862A-2ACE59FF7CAF",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下两图所示，首先程序运行在模拟的用户模式下，使CPU有一个短暂的峰值。然后使用SpinWait工作在混合模式下，首先标志变量为False处于用户模式自旋中，等待以后进入内核模式。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406514,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[44,8]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406514
    },
    {
      "id": "3E5A9915-34D1-4D5A-AB0E-AA2A069F5197",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "执行基本原子操作",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406473,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406473
    },
    {
      "id": "445C424B-74B8-433A-A08C-EFE54C05FDA7",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用Barrier类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406498,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406499
    },
    {
      "id": "44FD3C59-6FC4-4DC0-938B-D16E766255A4",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "一个线程读取数据时，请求读取的线程允许读取，而请求写入的线程被阻塞。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406505,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406505
    },
    {
      "id": "465986F9-E97D-48C3-B572-83663B2BF86E",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjY7ZdJ3QnDp3rUWKAx4enw54vVgcf9XijAnXWK8DVJTamStroC9bSWiRhypNEvZTcH6Dmwu4ZuzgXi7UE7ZphPDgZVMx2GVnDYoafhbBYXMrSaRqkRYa4NneWdtKqYb6VkyK137E99JwRRyvmBa7yqb28oi",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.4869215291750504\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"739.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1106160\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqb99gyeWRoDTxkz4exfPQm42P5z15SgQeT7ABMemgseXVq6hbvGco5upXivue4u8Rci88v9d1PfHNuogVHUdeheiY9DjkPh6sFduqYZuwaSEthckjhPPKpBrDmzyyFgcy11nxiPeeH4KyEEJN4neajkGXq/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjY7ZdJ3QnDp3rUWKAx4enw54vVgcf9XijAnXWK8DVJTamStroC9bSWiRhypNEvZTcH6Dmwu4ZuzgXi7UE7ZphPDgZVMx2GVnDYoafhbBYXMrSaRqkRYa4NneWdtKqYb6VkyK137E99JwRRyvmBa7yqb28oi/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532530147,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532539883
    },
    {
      "id": "526CAB3E-1098-4FF8-9660-934F9899184C",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    var t = new Thread(() => Process(10));\n    t.Start();\n\n    Console.WriteLine(\"等待另一个线程完成工作！\");\n    // 等待工作线程通知 主线程阻塞\n    _workerEvent.WaitOne();\n    Console.WriteLine(\"第一个操作已经完成！\");\n    Console.WriteLine(\"在主线程上执行操作\");\n    Thread.Sleep(TimeSpan.FromSeconds(5));\n\n    // 发送通知 工作线程继续运行\n    _mainEvent.Set();\n    Console.WriteLine(\"现在在第二个线程上运行第二个操作\");\n\n    // 等待工作线程通知 主线程阻塞\n    _workerEvent.WaitOne();\n    Console.WriteLine(\"第二次操作完成！\");\n\n    Console.ReadLine();\n}\n\n// 工作线程Event\nprivate static AutoResetEvent _workerEvent = new AutoResetEvent(false);\n// 主线程Event\nprivate static AutoResetEvent _mainEvent = new AutoResetEvent(false);\n\nstatic void Process(int seconds)\n{\n    Console.WriteLine(\"开始长时间的工作...\");\n    Thread.Sleep(TimeSpan.FromSeconds(seconds));\n    Console.WriteLine(\"工作完成!\");\n\n    // 发送通知 主线程继续运行\n    _workerEvent.Set();\n    Console.WriteLine(\"等待主线程完成其它工作\");\n\n    // 等待主线程通知 工作线程阻塞\n    _mainEvent.WaitOne();\n    Console.WriteLine(\"启动第二次操作...\");\n    Thread.Sleep(TimeSpan.FromSeconds(seconds));\n    Console.WriteLine(\"工作完成!\");\n\n    // 发送通知 主线程继续运行\n    _workerEvent.Set();\n}\n",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406488,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532553325
    },
    {
      "id": "5A7DE8DD-54D6-4505-B83D-BBD2DD5CC211",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "CountDownEvent类内部构造使用了一个ManualResetEventSlim对象。这个构造阻塞一个线程，直到它内部计数器(CurrentCount)变为0时，才解除阻塞。也就是说它并不是阻止对已经枯竭的资源池的访问，而是只有当计数为0时才允许访问。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406495,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,14]},{\"isCode\":true,\"range\":[24,20]},{\"isCode\":true,\"range\":[67,12]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406495
    },
    {
      "id": "5B7F3AA1-3AF7-4BF3-944A-5D96834A3261",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下所示，与预期结果相符。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406509,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406509
    },
    {
      "id": "5D7A9768-5D92-4A79-975F-DD30F31A77A7",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "不可抢先(No preemption)：一个线程(ThreadA)占有资源不能被强制拿走(只能等待ThreadA主动释放它的资源)。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406472,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":3}",
      "blocks": [],
      "updated": 1687532406472
    },
    {
      "id": "5DCF1F4B-DF4B-4FEC-B369-C68C8AF426D5",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用ManualResetEventSlim类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406490,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406490
    },
    {
      "id": "5F54DF79-01A6-476C-BAB9-7B917213E0DC",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用Mutex类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406478,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406478
    },
    {
      "id": "5F768DC3-AA83-4A7C-B2F0-978D7BC11957",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用SpinWait类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406512,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406512
    },
    {
      "id": "64F4C2A7-4B9D-4564-8462-9CBA4F6AB614",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下所示，与预期结果基本相符。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406476,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406476
    },
    {
      "id": "65AA82C8-94C9-4A6A-9E38-E6D545C3CAED",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用AutoResetEvent类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406485,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406485
    },
    {
      "id": "6BD625E6-E49A-4271-A862-2D72ECEDD160",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下所示，可见前4个线程马上就获取到了锁，进入了临界区，而另外两个线程在等待；等有锁被释放时，才能进入临界区。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406484,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406484
    },
    {
      "id": "6E1359C6-47EE-4029-B4ED-F807D4429ABB",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用原子性的Interlocked方法。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406467,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[6,11]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":2}",
      "blocks": [],
      "updated": 1687532406468
    },
    {
      "id": "76D77B65-C556-4B3D-9821-9D7F95C417D2",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXUu1HA4hZVywbNAQPXi7BDSgMcgnSPpRh3rm7U5jS7Vx2Y4mbsDpj6nw89N95WB3iud95V4Z1CztGJdWFBiZbH2AvxVNHZhxxQv1S2ytzb3fm8X1RUb9CzQTLgMpmuEA1EvCwNQMfpU9Hvc5iFs678tZvP",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.7482142857142857\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"979.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1649062\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqP5RjddFC1rfEQFcvmRgcdq5KMu8rSnngDGzvuSeEBrYM4T2jwr2R411UvddcBK3FLg95zHe7E1nzvr6nPCJzcMGvS4WujsUHtit54gPyXxC3aozFmA6J6VMuXuuDG9utmK12cGVU1nUUKy7QYB3LUuSd4/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXUu1HA4hZVywbNAQPXi7BDSgMcgnSPpRh3rm7U5jS7Vx2Y4mbsDpj6nw89N95WB3iud95V4Z1CztGJdWFBiZbH2AvxVNHZhxxQv1S2ytzb3fm8X1RUb9CzQTLgMpmuEA1EvCwNQMfpU9Hvc5iFs678tZvP/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532685168,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532704320
    },
    {
      "id": "788EF424-8DE6-43BA-B78C-BF28C2F3E499",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "ReaderWriterLockSlim类主要是解决在某些场景下，读操作多于写操作而使用某些互斥锁当多个线程同时访问资源时，只有一个线程能访问，导致性能急剧下降。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406503,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,20]},{\"isBold\":true,\"range\":[33,8]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406503
    },
    {
      "id": "78C930B9-7A0D-4C0F-B709-D605529E7EB1",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "AutoResetEvent叫自动重置事件，虽然名称中有事件一词，但是重置事件和C#中的委托没有任何关系，这里的事件只是由内核维护的Boolean变量，当事件为false，那么在事件上等待的线程就阻塞；事件变为true，那么阻塞解除。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406486,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,14]},{\"isBold\":true,\"range\":[28,2]},{\"isCode\":true,\"range\":[66,7]},{\"isCode\":true,\"range\":[80,5]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406486
    },
    {
      "id": "7A643383-3279-44E2-8512-899511A6E25D",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    var t1 = new Thread(UserModeWait);\n    var t2 = new Thread(HybridSpinWait);\n\n    Console.WriteLine(\"运行在用户模式下\");\n    t1.Start();\n    Thread.Sleep(20);\n    _isCompleted = true;\n    Thread.Sleep(TimeSpan.FromSeconds(1));\n    _isCompleted = false;\n\n    Console.WriteLine(\"运行在混合模式下\");\n    t2.Start();\n    Thread.Sleep(5);\n    _isCompleted = true;\n\n    Console.ReadLine();\n}\n\nstatic volatile bool _isCompleted = false;\n\nstatic void UserModeWait()\n{\n    while (!_isCompleted)\n    {\n        Console.Write(\".\");\n    }\n    Console.WriteLine();\n    Console.WriteLine(\"等待结束\");\n}\n\nstatic void HybridSpinWait()\n{\n    var w = new SpinWait();\n    while (!_isCompleted)\n    {\n        w.SpinOnce();\n        Console.WriteLine(w.NextSpinWillYield);\n    }\n    Console.WriteLine(\"等待结束\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406513,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532681756
    },
    {
      "id": "7D35A379-4544-4ECA-A14F-47BBCFF7E455",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXS4YNJyrQZEHnSk5jRbuHtYEyn6nR3cY4LtvEbpxTyByMT7XSmuMqbSVYaF6McUCwyreJbAutrgfQJY2tbEFnVTK3P7geyhzcsM5F7s44f436stVfYN8tVroRCzaaWE9Jj5ee6Tm6F4LmstKWYAVTYEat1",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.9085603112840468\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"981.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1517036\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqmR2xxRqdCD478i3wNjxXFLK3K5XKurubA7PVGRoLH4CEh5Uac6AzwvqBtjEELRTCpN4nUApUNyZRBDZiwAhDY4YA6Pnb9Y1993fNXAYD8vuGMiPyxyCrikay2hT1DHyPCDNs4t6RVnxGNt6v2PVfSUUAs/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXS4YNJyrQZEHnSk5jRbuHtYEyn6nR3cY4LtvEbpxTyByMT7XSmuMqbSVYaF6McUCwyreJbAutrgfQJY2tbEFnVTK3P7geyhzcsM5F7s44f436stVfYN8tVroRCzaaWE9Jj5ee6Tm6F4LmstKWYAVTYEat1/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532658328,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532669323
    },
    {
      "id": "7F89CAFB-42E2-4024-B28C-CBCAA2DDE0D2",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "一个线程向数据写入是，请求访问的其他所有线程都被阻塞。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406505,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406505
    },
    {
      "id": "7FEBE740-8754-40EB-9442-259220D457A5",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "线程同步有两种源语(Primitive)构造：用户模式(user - mode)和内核模式(kernel - mode)，当资源可用时间短的情况下，用户模式要优于内核模式，但是如果长时间不能获得资源，或者说长时间处于“自旋”，那么内核模式是相对来说好的选择。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406465,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[23,58]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406465
    },
    {
      "id": "801CA9C9-189E-4567-A36E-6364DBDE0F96",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "示例代码如下所示，创建了3个读线程，2个写线程，读线程和写线程竞争获取锁。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406508,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406508
    },
    {
      "id": "827210D9-5571-49F1-BC67-67B711EAD535",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "演示代码如下所示，该代码演示了通过AutoResetEvent实现两个线程的互相同步。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406487,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[17,14]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406488
    },
    {
      "id": "829E6854-FE0A-4EFE-A138-314B48E77E5A",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXf4ue3ByMAbEZhNtwuatE7p19XSxRZg3crGhjqWEd4ZdXkXNpXe3XoA7E3tDhW9EJNH4Uxk5zpiPx5h372nx6M5tDUGbGctmRyzgeK6CkkCVmRXJ42BYDtNRpgCQaFkjQhdnz7MoQF13MhSiJNwy2YCZQS",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.175\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"799.0\",\"primaryColor\":\"16777215\",\"rawDataSize\":\"1634302\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqxwmsjQMZqMbsBuVkV65X27gtt8Etqh6biSjnYWjHVPvpCMvLNjkG9s5xnbfcqcDhmjvwzdvzQTh3S2aWWKJr8b5XRxR9UNk4KZdpj2ND3uPx7TngYKUmSnUDCGvbix8zi3Apv8nCRYRvdZTEyTVJpvMU5/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXf4ue3ByMAbEZhNtwuatE7p19XSxRZg3crGhjqWEd4ZdXkXNpXe3XoA7E3tDhW9EJNH4Uxk5zpiPx5h372nx6M5tDUGbGctmRyzgeK6CkkCVmRXJ42BYDtNRpgCQaFkjQhdnz7MoQF13MhSiJNwy2YCZQS/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532693078,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532704321
    },
    {
      "id": "8446B511-5A06-4A25-8FB7-DA3878F2A604",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "如果代码能通过优化可以不进行同步，那么就不要做同步。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406467,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":1}",
      "blocks": [],
      "updated": 1687532406467
    },
    {
      "id": "8BFE4FF6-2938-433F-B767-23C7DB958A42",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "这里需要注意的是，当CurrentCount变为0时，那么它就不能被更改了。为0以后，Wait()方法的阻塞被解除。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406495,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[10,12]},{\"isCode\":true,\"range\":[43,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406496
    },
    {
      "id": "8EE11261-8659-41F7-B1F7-0B3E782CCB8C",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "它的使用非常简单，演示代码如下所示。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406513,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406513
    },
    {
      "id": "8EF7CF40-DA07-4779-9155-6FBA3C9BF09D",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "本章介绍在C#中实现线程同步的几种方法。因为多个线程同时访问共享数据时，可能会造成共享数据的损坏，从而导致与预期的结果不相符。为了解决这个问题，所以需要用到线程同步，也被俗称为“加锁”。但是加锁绝对不对提高性能，最多也就是不增不减，要实现性能不增不减还得靠高质量的同步源语(Synchronization Primitive)。但是因为正确永远比速度更重要，所以线程同步在某些场景下是必须的。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406464,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[95,20]},{\"isBold\":true,\"range\":[132,4]},{\"isBold\":true,\"range\":[168,10]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406464
    },
    {
      "id": "8F1520C1-8B11-4EA4-B3E0-47FAF8BA6734",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "假设现在并行工作分为2个阶段，每个线程在完成它自己那部分阶段1的工作后，必须停下来等待其它线程完成阶段1的工作；等所有线程均完成阶段1工作后，每个线程又开始运行，完成阶段2工作，等待其它线程全部完成阶段2工作后，整个流程才结束。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406500,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406500
    },
    {
      "id": "8F3CA0BF-9FCF-4799-979A-E6C4CA7AC3F2",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "因为以上的原因，所以在很多文章和书籍中不推荐使用AutoResetEvent(自动重置事件)，因为它很容易在编写生产者线程时发生失误，造成它的迭代次数多余消费者线程。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406487,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[24,14]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406487
    },
    {
      "id": "910B3B64-D1DD-464F-AC0B-1ED888710444",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用CountDownEvent类",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406494,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406494
    },
    {
      "id": "920C110F-C64B-437B-A82F-8ED4BCA68915",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    // 创建6个线程 竞争访问AccessDatabase\n    for (int i = 1; i <= 6; i++)\n    {\n        string threadName = \"线程 \" + i;\n        // 越后面的线程，访问时间越久 方便查看效果\n        int secondsToWait = 2 + 2 * i;\n        var t = new Thread(() => AccessDatabase(threadName, secondsToWait));\n        t.Start();\n    }\n\n    Console.ReadLine();\n}\n\n// 同时允许4个线程访问\nstatic SemaphoreSlim _semaphore = new SemaphoreSlim(4);\n\nstatic void AccessDatabase(string name, int seconds)\n{\n    Console.WriteLine($\"{name} 等待访问数据库.... {DateTime.Now.ToString(\"HH:mm:ss.ffff\")}\");\n\n    // 等待获取锁 进入临界区\n    _semaphore.Wait();\n\n    Console.WriteLine($\"{name} 已获取对数据库的访问权限 {DateTime.Now.ToString(\"HH:mm:ss.ffff\")}\");\n    // Do something\n    Thread.Sleep(TimeSpan.FromSeconds(seconds));\n\n    Console.WriteLine($\"{name} 访问完成... {DateTime.Now.ToString(\"HH:mm:ss.ffff\")}\");\n    // 释放锁\n    _semaphore.Release();\n}\n",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406483,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532524901
    },
    {
      "id": "94242562-B617-4406-928E-CB6A2A06B0AB",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "ManualResetEventSlim使用和ManualResetEvent类基本一致，只是ManualResetEventSlim工作在混合模式下，而它与AutoResetEventSlim不同的地方就是需要手动重置事件，也就是调用Reset()才能将事件重置为false。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406490,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,20]},{\"isCode\":true,\"range\":[23,16]},{\"isCode\":true,\"range\":[47,20]},{\"isBold\":true,\"range\":[70,4]},{\"isCode\":true,\"range\":[79,18]},{\"isCode\":true,\"range\":[118,7]},{\"isCode\":true,\"range\":[133,5]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406491
    },
    {
      "id": "9787A5BA-0957-42A0-860E-AD941955A548",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXTfHYZAMrfYgk3pQS8N99GxqtVEZ3BT55NAwwqAryU3Ano3R6XYvmUA25gXhgQpH4erT6joNV7L7wDchWxWRu4jqDpz7R72DvrYPZEeMRyT6SJpNakhqhoBqnwrikFfmc3NE4ohDqTHhY1gKaqfZoLZngE",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.646817248459959\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"802.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1176040\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacr43w2Y5MqP4UFQmDEjAvmwQgTMYM48qA8ZFUmC6sL1JTB1L6CSggYtoSxKnuLYcMZHwgNvfAk2t3BqYRfTykbjqVsE1262JJfAkBZgoGnETE9AaWygK8kyU2xyK9oW7GBWe88yG58eqJscVaLbFRqw7qZb/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXTfHYZAMrfYgk3pQS8N99GxqtVEZ3BT55NAwwqAryU3Ano3R6XYvmUA25gXhgQpH4erT6joNV7L7wDchWxWRu4jqDpz7R72DvrYPZEeMRyT6SJpNakhqhoBqnwrikFfmc3NE4ohDqTHhY1gKaqfZoLZngE/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532600342,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532605282
    },
    {
      "id": "9842BC99-AE58-4A02-8F18-D0DB74F175FB",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "CLR保证了对这些数据类型的读写是原子性的：Boolean、Char、(S)Byte、(U)Int16、(U)Int32、(U)IntPtr和Single。但是如果读写Int64可能会发生读取撕裂(torn read)的问题，因为在32位操作系统中，它需要执行两次Mov操作，无法在一个时间内执行完成。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406474,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[22,55]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406474
    },
    {
      "id": "9C1A7DBB-4E42-403A-ADFE-D1810EC6C22B",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用其它加锁机制，如ReaderWriterLockSlim、Mutex、Semaphore等。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406469,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[10,36]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":5}",
      "blocks": [],
      "updated": 1687532406469
    },
    {
      "id": "9E9D6575-A66A-4767-BE98-AA228E6E6363",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "但是我们希望兼具用户模式和内核模式的优点，我们把它称为**混合构造(hybrid construct)**，它兼具了两种模式的优点。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406465,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406466
    },
    {
      "id": "9EC72B1B-CBAF-40E0-976B-ED30FCFA37F9",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    Console.WriteLine($\"开始两个操作  {DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n    var t1 = new Thread(() => PerformOperation(\"操作 1 完成！\", 4));\n    var t2 = new Thread(() => PerformOperation(\"操作 2 完成！\", 8));\n    t1.Start();\n    t2.Start();\n\n    // 等待操作完成\n    _countdown.Wait();\n    Console.WriteLine($\"所有操作都完成  {DateTime.Now.ToString(\"mm: ss.ffff\")}\");\n    _countdown.Dispose();\n\n    Console.ReadLine();\n}\n\n// 构造函数的参数为2 表示只有调用了两次 Signal方法 CurrentCount 为 0时  Wait的阻塞才解除\nstatic CountdownEvent _countdown = new CountdownEvent(2);\n\nstatic void PerformOperation(string message, int seconds)\n{\n    Thread.Sleep(TimeSpan.FromSeconds(seconds));\n    Console.WriteLine($\"{message}  {DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n\n    // CurrentCount 递减 1\n    _countdown.Signal();\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406497,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532597010
    },
    {
      "id": "A1D75110-E93E-4CCC-B194-7CEBBACB56E9",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXYStCbWWgEs1J31U6MHFhqs58Es77MmtX8a5kheKAf9EPhWKmqffMWUWAEkVG1YFNK6e8Wgkcf19S6xM5PJpY5bj9nKspjTGL2j7h7j8T2epbqzYSRbYJTErJgYhw66hSB9jWz2r9uECatTSrNZCSQLC6g",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.6688311688311688\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"771.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1072916\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqRrLRb2WVpCCP1QmcmnjYSUJsnqWqDhwtB1JsKmRvSmSwPsThgCMmLDR6d63vaXi7vaU9y1jDs5HXdGwbHxKRga49pviEpbV6t5R4XoqskRYtG9aFnc4uKa7XQr7fGSovsnkHjyHK2Hqna93Hc2F68yg1J/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXYStCbWWgEs1J31U6MHFhqs58Es77MmtX8a5kheKAf9EPhWKmqffMWUWAEkVG1YFNK6e8Wgkcf19S6xM5PJpY5bj9nKspjTGL2j7h7j8T2epbqzYSRbYJTErJgYhw66hSB9jWz2r9uECatTSrNZCSQLC6g/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532581051,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532585179
    },
    {
      "id": "A32E9915-8607-4A86-9692-DCE6445B53A8",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "在.Net中有两种此类事件，即AutoResetEvent(自动重置事件)和ManualResetEvent(手动重置事件)。这两者均是采用内核模式，它的区别在于当重置事件为true时，自动重置事件它只唤醒一个阻塞的线程，会自动将事件重置回false，造成其它线程继续阻塞。而手动重置事件不会自动重置，必须通过代码手动重置回false。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406486,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[70,4]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[93,27]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[138,24]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[15,14]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[38,16]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[87,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[120,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[162,5]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749113649997
    },
    {
      "id": "A7ADB65E-BA89-4BDE-BE01-FB48F89D4F39",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "C#-线程同步【Area】",
      "pageStyleData": "{\"background\":{\"size\":\"full\",\"solidColor\":\"#f7f9f7\",\"type\":\"solid\"},\"isMirrored\":true,\"pageWidthType\":\"true\",\"styleId\":\"luki\"}",
      "rawProperties": "{\"coverImageEnabled\":\"false\",\"hasBeenPagifiedBefore\":\"1\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532404528,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"pageRegular\"}",
      "blocks": [
        "ACD218A6-9F2E-4CB6-9F19-7D224AFF6CDC",
        "8EF7CF40-DA07-4779-9155-6FBA3C9BF09D",
        "7FEBE740-8754-40EB-9442-259220D457A5",
        "9E9D6575-A66A-4767-BE98-AA228E6E6363",
        "FDBFE92A-F334-4FE3-BAB9-3BA94A4DC7FC",
        "8446B511-5A06-4A25-8FB7-DA3878F2A604",
        "6E1359C6-47EE-4029-B4ED-F807D4429ABB",
        "BACEFD65-5624-4378-A943-242A9FA32D7F",
        "0E5BE987-5F0D-4693-831D-0A556032C48E",
        "9C1A7DBB-4E42-403A-ADFE-D1810EC6C22B",
        "118517BE-8C19-44A3-97E3-231105862ECD",
        "B039C4A5-4E2B-4CA1-90BA-E4FB600E8286",
        "DC9ED431-0CFD-4703-93FC-AFEAB23E12FE",
        "B0E5CADA-A812-4BD0-8DCF-7D105B920E37",
        "5D7A9768-5D92-4A79-975F-DD30F31A77A7",
        "E8AFDB4E-4093-4867-B1F7-BA4021204ED2",
        "3E5A9915-34D1-4D5A-AB0E-AA2A069F5197",
        "9842BC99-AE58-4A02-8F18-D0DB74F175FB",
        "AB0E5F7C-7EF9-4CBF-9A6F-49CFF22D4A60",
        "26727D15-9B4B-4FAE-942E-2183D5D30906",
        "260D2532-FEBC-4695-AC09-C23598CB2696",
        "64F4C2A7-4B9D-4564-8462-9CBA4F6AB614",
        "1BD82915-9FAC-4D2F-8C1F-DDDBBE0E8D44",
        "5F54DF79-01A6-476C-BAB9-7B917213E0DC",
        "11095A4C-D529-43F2-80DA-B7C0CB5F42E5",
        "1DC64351-B46A-44ED-A204-AFCEB24DA343",
        "D69A30C3-2819-4B23-A4AF-3B29AEE82D74",
        "D0218004-0603-41E9-8A80-7FBFB7A3B671",
        "CE4A6FF8-E4ED-4DF7-A2FB-ABB0E08D24DA",
        "30265E8C-0E22-459B-B41D-8FD7970A3D7E",
        "CCCF921B-B738-4016-A6A2-6E7786D59AE0",
        "F5B167DD-7874-4999-B5EB-201942A44B6C",
        "29E8CC6E-028D-4D83-A64D-A1285772AAB8",
        "920C110F-C64B-437B-A82F-8ED4BCA68915",
        "6BD625E6-E49A-4271-A862-2D72ECEDD160",
        "465986F9-E97D-48C3-B572-83663B2BF86E",
        "65AA82C8-94C9-4A6A-9E38-E6D545C3CAED",
        "78C930B9-7A0D-4C0F-B709-D605529E7EB1",
        "A32E9915-8607-4A86-9692-DCE6445B53A8",
        "8F3CA0BF-9FCF-4799-979A-E6C4CA7AC3F2",
        "827210D9-5571-49F1-BC67-67B711EAD535",
        "526CAB3E-1098-4FF8-9660-934F9899184C",
        "EC268F90-01BB-430B-B0DF-496F1DA1E343",
        "1E477CE0-E273-4C99-8804-349F4A008E09",
        "5DCF1F4B-DF4B-4FEC-B369-C68C8AF426D5",
        "94242562-B617-4406-928E-CB6A2A06B0AB",
        "EE4DB35E-758E-4E62-A4FE-A65716A7F544",
        "FBF1602B-3C60-4ADF-8DFF-5E2891657AF6",
        "C3FA825A-A8EE-401F-9E2C-4E32E3DF53C0",
        "A1D75110-E93E-4CCC-B194-7CEBBACB56E9",
        "910B3B64-D1DD-464F-AC0B-1ED888710444",
        "5A7DE8DD-54D6-4505-B83D-BBD2DD5CC211",
        "8BFE4FF6-2938-433F-B767-23C7DB958A42",
        "013AAF2F-E438-40BB-A6C5-EC4E3E10F5F8",
        "9EC72B1B-CBAF-40E0-976B-ED30FCFA37F9",
        "0A9E6BA9-2476-4819-B7C7-36F296A7A9D3",
        "9787A5BA-0957-42A0-860E-AD941955A548",
        "445C424B-74B8-433A-A08C-EFE54C05FDA7",
        "EF8529E1-7063-4573-A5AC-9C0E24BD7C6C",
        "8F1520C1-8B11-4EA4-B3E0-47FAF8BA6734",
        "B7F2B0D3-78F7-486E-AB8A-44B17B2777DB",
        "D09B3EA9-F326-4E57-B13B-40BE8603D923",
        "1DEF8A81-7CED-40A4-8346-B8A1EE3D84D2",
        "0277ED36-3A3C-4596-86B0-995EE7B48AF9",
        "053C5F0E-A9BD-4EA6-BE80-FEC24B10E561",
        "788EF424-8DE6-43BA-B78C-BF28C2F3E499",
        "034F84F1-7A80-4742-ABA1-943F7DC85191",
        "7F89CAFB-42E2-4024-B28C-CBCAA2DDE0D2",
        "44FD3C59-6FC4-4DC0-938B-D16E766255A4",
        "D1CBB632-9020-4A58-9BFD-0A2AF3F3E375",
        "D1C660F5-D58F-4FC2-AD20-597496F16FD9",
        "B874B4BD-CF66-4873-B75A-67954D778A4F",
        "801CA9C9-189E-4567-A36E-6364DBDE0F96",
        "F394FCD2-171E-4AD9-804C-DC1B1D698E04",
        "5B7F3AA1-3AF7-4BF3-944A-5D96834A3261",
        "7D35A379-4544-4ECA-A14F-47BBCFF7E455",
        "5F768DC3-AA83-4A7C-B2F0-978D7BC11957",
        "2160DD4D-3998-4B3B-9CF4-AD64F87FD117",
        "8EE11261-8659-41F7-B1F7-0B3E782CCB8C",
        "7A643383-3279-44E2-8512-899511A6E25D",
        "375381C5-E181-4456-862A-2ACE59FF7CAF",
        "76D77B65-C556-4B3D-9821-9D7F95C417D2",
        "829E6854-FE0A-4EFE-A138-314B48E77E5A"
      ],
      "pageStyleProps": "{\"color\":\"#1F2225 #F4F4F4\",\"backdrop\":\"#f7f9f7 #f7f9f7\",\"theme-id\":\"3C07060B-6733-42A8-B033-C8EC0A19272D\",\"card-assets\":\"none\",\"font-family\":\"system\",\"page-width-type\":\"true\",\"separator-style\":\"line\",\"background-color\":\"#FFFFFF #222222\"}",
      "updated": 1750335541713
    },
    {
      "id": "AB0E5F7C-7EF9-4CBF-9A6F-49CFF22D4A60",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "那么在本节中，就会着重的介绍System.Threading.Interlocked类提供的方法，Interlocked类中的每个方法都是执行一次的读取以及写入操作。更多与Interlocked类相关的资料请参考链接，戳一戳本文不在赘述。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406474,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[14,28]},{\"isCode\":true,\"range\":[49,11]},{\"linkURL\":\"https://msdn.microsoft.com/zh-cn/library/system.threading.interlocked(v=vs.110).aspx\",\"range\":[109,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406474
    },
    {
      "id": "ACD218A6-9F2E-4CB6-9F19-7D224AFF6CDC",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "简介",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406463,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1687532406464
    },
    {
      "id": "B039C4A5-4E2B-4CA1-90BA-E4FB600E8286",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "在同步中，一定要注意避免死锁的发生，死锁的发生必须满足以下4个基本条件，所以只需要破坏任意一个条件，就可避免发生死锁。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406470,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406471
    },
    {
      "id": "B0E5CADA-A812-4BD0-8DCF-7D105B920E37",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "占有并等待(Hold and wait)：互斥的一个线程(ThreadA)请求获取另一个线程(ThreadB)占有的资源.",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406471,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":2}",
      "blocks": [],
      "updated": 1687532406472
    },
    {
      "id": "B7F2B0D3-78F7-486E-AB8A-44B17B2777DB",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "演示代码如下所示，该代码演示了两个线程分阶段的完成工作。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406500,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406500
    },
    {
      "id": "B874B4BD-CF66-4873-B75A-67954D778A4F",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "ReaderWriterLockSlim还支持从读线程升级为写线程的操作，详情请戳一戳。文本不作介绍。ReaderWriterLock类已经过时，而且存在许多问题，没有必要去使用。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406507,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,20]},{\"isBold\":true,\"range\":[24,9]},{\"linkURL\":\"https://msdn.microsoft.com/zh-cn/library/system.threading.readerwriterlockslim(v=vs.110).aspx\",\"range\":[40,3]},{\"isCode\":true,\"range\":[51,16]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406507
    },
    {
      "id": "BACEFD65-5624-4378-A943-242A9FA32D7F",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "使用lock/Monitor类。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406468,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[2,12]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":3}",
      "blocks": [],
      "updated": 1687532406468
    },
    {
      "id": "C3FA825A-A8EE-401F-9E2C-4E32E3DF53C0",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下，与预期结果相符。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406492,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406493
    },
    {
      "id": "CCCF921B-B738-4016-A6A2-6E7786D59AE0",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "SemaphoreSlim类与之前提到的同步类有锁不同，之前提到的同步类都是互斥的，也就是说只允许一个线程进行访问资源，而SemaphoreSlim是可以允许多个访问。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406482,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,13]},{\"isCode\":true,\"range\":[61,13]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406482
    },
    {
      "id": "CE4A6FF8-E4ED-4DF7-A2FB-ABB0E08D24DA",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXmYmETCL1dr81QQ7EqkzHWBZ5X5VH8fAnsjPtMpgpgEtnCoZZh8XAY9wAvHJxhWMmtEPZRtx28qxgkzs7F18P6J3PYEMnANkes3udGYov467badmPobLBN3XMSESmq6HENRxTMbGBt5goi22k1BLbLtg4A",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.4370546318289787\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"1026.0\",\"primaryColor\":\"0\",\"rawDataSize\":\"1300164\",\"rawUrl\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuF8hUQa9TefB58UfTBn6jE5Mi5UWRr8EgxGzMbaC1vKXQMKSqYvizCTGsK9MBkiVZvRK6uC3FZcXL3aGCxrmC6AMmLkrLBzUjURC8RXZX3eacqbxHpdyseHAUnQeq3GQdSLUXS6jD7CqeTKRq5YXHWdZA5ThYQxqRrk2uJpfc8x7gwy8R4HTmMt5ATarfES3iAMwT7AGYKncZGRkVo2EDDPgwanDyWJMbGAPhACi6EqKMCKXh9stia3EQo6qzx3Rwi7DBz1/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/U87oaYUjZmokLeGbkfLoNg5JsqjA3aBXjyxcPksEjqeuTQFv1pNkEwHxvxjMBzFJMUe9RMVkH91xm1BbJA2kMmQEUwPpH8gkorktS8jTuaMfpDCwzggvPg7NVktRA8Wo9Z83fpKcp7g6Qqhr5kvtMBdjXmYmETCL1dr81QQ7EqkzHWBZ5X5VH8fAnsjPtMpgpgEtnCoZZh8XAY9wAvHJxhWMmtEPZRtx28qxgkzs7F18P6J3PYEMnANkes3udGYov467badmPobLBN3XMSESmq6HENRxTMbGBt5goi22k1BLbLtg4A/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532504374,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532515302
    },
    {
      "id": "D0218004-0603-41E9-8A80-7FBFB7A3B671",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下图所示，打开了两个应用程序，因为使用Mutex实现了单实例，所以第二个应用程序无法获取锁，就会显示已有实例正在运行。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406480,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[24,5]},{\"isBold\":true,\"range\":[55,8]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406480
    },
    {
      "id": "D09B3EA9-F326-4E57-B13B-40BE8603D923",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    var t1 = new Thread(() => PlayMusic(\"钢琴家\", \"演奏一首令人惊叹的独奏曲\", 5));\n    var t2 = new Thread(() => PlayMusic(\"歌手\", \"唱着他的歌\", 2));\n\n    t1.Start();\n    t2.Start();\n\n    Console.ReadLine();\n}\n\nstatic Barrier _barrier = new Barrier(2, Console.WriteLine($\"第 {b.CurrentPhaseNumber + 1} 阶段结束\"));\n\nstatic void PlayMusic(string name, string message, int seconds)\n{\n    for (int i = 1; i < 3; i++)\n    {\n        Console.WriteLine(\"----------------------------------------------\");\n        Thread.Sleep(TimeSpan.FromSeconds(seconds));\n        Console.WriteLine($\"{name} 开始 {message}\");\n        Thread.Sleep(TimeSpan.FromSeconds(seconds));\n        Console.WriteLine($\"{name} 结束 {message}\");\n        _barrier.SignalAndWait();\n    }\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406501,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532616163
    },
    {
      "id": "D1C660F5-D58F-4FC2-AD20-597496F16FD9",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "从数据读取的所有线程结束后，一个写线程被解除阻塞，使它能向数据写入。如果线程没有被阻塞，锁就可以进入自由使用的状态，可供下一个读线程或写线程获取。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406506,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406506
    },
    {
      "id": "D1CBB632-9020-4A58-9BFD-0A2AF3F3E375",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "写入线程结束后，要么解除一个写入线程的阻塞，使写入线程能向数据接入，要么解除所有读取线程的阻塞，使它们能并发读取数据。如果线程没有被阻塞，锁就可以进入自由使用的状态，可供下一个读线程或写线程获取。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406506,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"range\":[38,2]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406506
    },
    {
      "id": "D69A30C3-2819-4B23-A4AF-3B29AEE82D74",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "const string MutexName = \"CSharpThreadingCookbook\";\n\nstatic void Main(string[] args)\n{\n    // 使用using 及时释放资源\n    using (var m = new Mutex(false, MutexName))\n    {\n        if (!m.WaitOne(TimeSpan.FromSeconds(5), false))\n        {\n            Console.WriteLine(\"已经有实例正在运行!\");\n        }\n        else\n        {\n            Console.WriteLine(\"运行中...\");\n\n            // 演示递归获取锁\n            Recursion();\n\n            Console.ReadLine();\n            m.ReleaseMutex();\n        }\n    }\n\n    Console.ReadLine();\n}\n\nstatic void Recursion()\n{\n    using (var m = new Mutex(false, MutexName))\n    {\n        if (!m.WaitOne(TimeSpan.FromSeconds(2), false))\n        {\n            // 因为Mutex支持递归获取锁 所以永远不会执行到这里\n            Console.WriteLine(\"递归获取锁失败！\");\n        }\n        else\n        {\n            Console.WriteLine(\"递归获取锁成功！\");\n        }\n    }\n}\n",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406479,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687574341535
    },
    {
      "id": "DC9ED431-0CFD-4703-93FC-AFEAB23E12FE",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "排他或互斥(Mutual exclusion)：一个线程(ThreadA)独占一个资源，没有其它线程(ThreadB)能获取相同的资源。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406471,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":1}",
      "blocks": [],
      "updated": 1687532406471
    },
    {
      "id": "E8AFDB4E-4093-4867-B1F7-BA4021204ED2",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "循环等待条件(Circular wait condition)：两个或多个线程构成一个循环等待链，它们锁定两个或多个相同的资源，每个线程都在等待链中的下一个线程占有的资源。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406473,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"numbered\",\"textStyle\":\"body\",\"userDefinedListNumber\":4}",
      "blocks": [],
      "updated": 1687532406473
    },
    {
      "id": "EC268F90-01BB-430B-B0DF-496F1DA1E343",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "运行结果如下图所示，与预期结果符合。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406489,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406489
    },
    {
      "id": "EE4DB35E-758E-4E62-A4FE-A65716A7F544",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "演示代码如下，形象的将ManualResetEventSlim比喻成大门，当事件为true时大门打开，线程解除阻塞；而事件为false时大门关闭，线程阻塞。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406491,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[11,20]},{\"isCode\":true,\"range\":[41,4]},{\"isCode\":true,\"range\":[62,5]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406491
    },
    {
      "id": "EF8529E1-7063-4573-A5AC-9C0E24BD7C6C",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "Barrier类用于解决一个非常稀有的问题，平时一般用不上。Barrier类控制一系列线程进行阶段性的并行工作。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406499,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[0,7]},{\"isCode\":true,\"range\":[30,7]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406499
    },
    {
      "id": "F394FCD2-171E-4AD9-804C-DC1B1D698E04",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    // 创建3个 读线程\n    new Thread(() => Read(\"Reader 1\")) { IsBackground = true }.Start();\n    new Thread(() => Read(\"Reader 2\")) { IsBackground = true }.Start();\n    new Thread(() => Read(\"Reader 3\")) { IsBackground = true }.Start();\n\n    // 创建两个写线程\n    new Thread(() => Write(\"Writer 1\")) { IsBackground = true }.Start();\n    new Thread(() => Write(\"Writer 2\")) { IsBackground = true }.Start();\n\n    // 使程序运行30S\n    Thread.Sleep(TimeSpan.FromSeconds(30));\n\n    Console.ReadLine();\n}\n\nstatic ReaderWriterLockSlim _rw = new ReaderWriterLockSlim();\nstatic Dictionary<int, int> _items = new Dictionary<int, int>();\n\nstatic void Read(string threadName)\n{\n    while (true)\n    {\n        try\n        {\n            // 获取读锁定\n            _rw.EnterReadLock();\n            Console.WriteLine($\"{threadName} 从字典中读取内容  {DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n            foreach (var key in _items.Keys)\n            {\n                Thread.Sleep(TimeSpan.FromSeconds(0.1));\n            }\n        }\n        finally\n        {\n            // 释放读锁定\n            _rw.ExitReadLock();\n        }\n    }\n}\n\nstatic void Write(string threadName)\n{\n    while (true)\n    {\n        try\n        {\n            int newKey = new Random().Next(250);\n            // 尝试进入可升级锁模式状态\n            _rw.EnterUpgradeableReadLock();\n            if (!_items.ContainsKey(newKey))\n            {\n                try\n                {\n                    // 获取写锁定\n                    _rw.EnterWriteLock();\n                    _items[newKey] = 1;\n                    Console.WriteLine($\"{threadName} 将新的键 {newKey} 添加进入字典中  {DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n                }\n                finally\n                {\n                    // 释放写锁定\n                    _rw.ExitWriteLock();\n                }\n            }\n            Thread.Sleep(TimeSpan.FromSeconds(0.1));\n        }\n        finally\n        {\n            // 减少可升级模式递归计数，并在计数为0时  推出可升级模式\n            _rw.ExitUpgradeableReadLock();\n        }\n    }\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406508,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532644269
    },
    {
      "id": "F5B167DD-7874-4999-B5EB-201942A44B6C",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "在之前的部分有提到，以*Slim结尾的线程同步类，都是工作在混合模式下的，也就是说开始它们都是在用户模式下\"自旋\"，等发生第一次竞争时，才切换到内核模式。但是SemaphoreSlim不同于Semaphore类，它不支持系统信号量，所以它不能用于进程之间的同步。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406482,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isCode\":true,\"range\":[11,5]},{\"isCode\":true,\"range\":[79,13]},{\"isCode\":true,\"range\":[95,9]},{\"isBold\":true,\"range\":[119,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406482
    },
    {
      "id": "FBF1602B-3C60-4ADF-8DFF-5E2891657AF6",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "static void Main(string[] args)\n{\n    var t1 = new Thread(() => TravelThroughGates(\"Thread 1\", 5));\n    var t2 = new Thread(() => TravelThroughGates(\"Thread 2\", 6));\n    var t3 = new Thread(() => TravelThroughGates(\"Thread 3\", 12));\n    t1.Start();\n    t2.Start();\n    t3.Start();\n    // 休眠6秒钟  只有Thread 1小于 6秒钟，所以事件重置时 Thread 1 肯定能进入大门  而 Thread 2 可能可以进入大门\n    Thread.Sleep(TimeSpan.FromSeconds(6));\n    Console.WriteLine($\"大门现在打开了!  时间：{DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n    _mainEvent.Set();\n    // 休眠2秒钟 此时 Thread 2 肯定可以进入大门\n    Thread.Sleep(TimeSpan.FromSeconds(2));\n    _mainEvent.Reset();\n    Console.WriteLine($\"大门现在关闭了! 时间：{DateTime.Now.ToString(\"mm: ss.ffff\")}\");\n    // 休眠10秒钟 Thread 3 可以进入大门\n    Thread.Sleep(TimeSpan.FromSeconds(10));\n    Console.WriteLine($\"大门现在第二次打开! 时间：{DateTime.Now.ToString(\"mm: ss.ffff\")}\");\n    _mainEvent.Set();\n    Thread.Sleep(TimeSpan.FromSeconds(2));\n    Console.WriteLine($\"大门现在关闭了! 时间：{DateTime.Now.ToString(\"mm: ss.ffff\")}\");\n    _mainEvent.Reset();\n    Console.ReadLine();\n}\nstatic void TravelThroughGates(string threadName, int seconds)\n{\n    Console.WriteLine($\"{threadName} 进入睡眠 时间：{DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n    Thread.Sleep(TimeSpan.FromSeconds(seconds));\n    Console.WriteLine($\"{threadName} 等待大门打开! 时间：{DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n    _mainEvent.Wait();\n    Console.WriteLine($\"{threadName} 进入大门! 时间：{DateTime.Now.ToString(\"mm:ss.ffff\")}\");\n}\nstatic ManualResetEventSlim _mainEvent = new ManualResetEventSlim(false);",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406492,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1687532577379
    },
    {
      "id": "FDBFE92A-F334-4FE3-BAB9-3BA94A4DC7FC",
      "documentId": "FD5C8E74-3B30-4065-B601-11390B68E68A",
      "content": "在C#中有多种线程同步的机制，通常可以按照以下顺序进行选择。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1687532406466,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1687532406466
    }
  ],
  "inheritedPageStyle": {
    "pageWidthType": "true",
    "background": {
      "size": "full",
      "solidColor": "#f7f9f7",
      "type": "solid"
    },
    "styleId": "luki",
    "header": {}
  },
  "inheritedPageStyleProps": {
    "color": "#1F2225 #F4F4F4",
    "backdrop": "#f7f9f7 #f7f9f7",
    "theme-id": "3C07060B-6733-42A8-B033-C8EC0A19272D",
    "card-assets": "none",
    "font-family": "system",
    "page-width-type": "true",
    "separator-style": "line",
    "background-color": "#FFFFFF #222222"
  },
  "rootBlockId": "A7ADB65E-BA89-4BDE-BE01-FB48F89D4F39",
  "settings": {
    "documentAppearance": "default",
    "hiddenLogo": false,
    "freeTier": false,
    "teamId": "e5336d46-6f5f-1acd-7266-4d0fefce8055",
    "forceSwitches": {}
  },
  "features": {
    "enabled": [
      "fs-show-title",
      "fs-enable-column-view"
    ],
    "disabled": [
      "fs-add-comment",
      "fs-view-comment",
      "fs-object-links",
      "fs-show-author",
      "fs-show-custom-logo",
      "fs-show-duplicate-as-template",
      "fs-hide-logo",
      "fs-hide-table-of-contents",
      "fs-hide-presentation-mode"
    ]
  }
}