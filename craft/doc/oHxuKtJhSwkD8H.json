{
  "schemaVersion": "1",
  "spaceId": "d8d537f0-b7d4-e6fe-0216-30e666a82048",
  "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
  "blocks": [
    {
      "id": "06CC8443-0F04-4156-BE57-CBB80CCCA793",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHFtsdSBPPSUshZtRPXKiPSPuAh1cqmuLTrmGu9UjCYxFe8b1E4BVPpgbLvDgTMEPbRoiehKzu2frEWKDEmgMmAqttFdU4mTBV3NRBQZJcXARu4ckDEWzxSpcTNbJakH5dGcAcWnm2TubLZp4znzHyzz3Lad",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.7093023255813953\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"466.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"244710\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUsD4GwmereDN2UPkUKuTGXwfmbjAGXxmcg4H3aKmwQYWuGa7TmhC2ngo7VrLWEyDdVTHoD35pFiN5Kvik9GhxBr5rbYPEgwG1bMi1LDRZUcQKFVTbeqpkz9uyvrXkAVNigMo6nkjZKB2bZXVY92YKC4vcTz/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHFtsdSBPPSUshZtRPXKiPSPuAh1cqmuLTrmGu9UjCYxFe8b1E4BVPpgbLvDgTMEPbRoiehKzu2frEWKDEmgMmAqttFdU4mTBV3NRBQZJcXARu4ckDEWzxSpcTNbJakH5dGcAcWnm2TubLZp4znzHyzz3Lad/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451702187,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688451707476
    },
    {
      "id": "06EC95CF-4494-4267-BC7C-A755DBC41309",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "一、变量的地址",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451569430,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688451585638
    },
    {
      "id": "0A060FB5-917E-4AB1-87EF-EB5ADC03E588",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "unsafe\n{  \n  var value = new FoobarClass(255, 1);  \n  var bytes = Utility.Read(ref value);  \n  var pointer1 = new nint(BinaryPrimitives.ReadInt64LittleEndian(bytes));  \n  var pointer2 = *(nint*)Unsafe.AsPointer(ref value);  \n  Debug.Assert(pointer1 == pointer2);\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451796311,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452645637
    },
    {
      "id": "0FFE4745-AD91-4F9C-B6D1-202B774E4876",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "我们最后通过一个简单的类比来做一个总结。变量的目的在于传递信息，假设我们现在利用一个“盒子”来传递一幅世界名画，这个盒子就是变量，对于非引用性质的传递（作为方法参数，或者赋值给另一个变量），传递的都是盒子承载内容的拷贝。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452255734,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452255734
    },
    {
      "id": "14ABFFAF-BE91-4A5A-88AE-6247351A6374",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "我们从IL代码的角度进一步探索常规参数传递和三种基于引用的参数传递，为此我们定义了如下这段简单的程序。如代码片段所示，Invoke方法定义了6个参数，arg、inArg和refArg分别为常规参数、in参数和ref参数，我们将它们赋值给三个对应的out参数。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452150756,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[3,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[59,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[75,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[79,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[85,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[99,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[104,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[123,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453252414
    },
    {
      "id": "1C7798EA-810D-49E1-A2CE-9DF49C2C525C",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如下所示的是Invoke方法对应的IL代码。看出虽然6个参数在C#中的类型都是Int32，但是标注了in/ref/out关键子的参数类型在IL中变成了int32&。由于inArg和refArg存储的是变量的地址，所以在利用ldarg.{index}指令将对应参数压入栈后，还需要进一步执行ldind.i4指令提取具体的值。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452165801,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[6,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[17,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[31,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[39,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[50,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[53,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[57,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[69,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[75,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[84,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[90,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[111,13]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[144,8]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453313201
    },
    {
      "id": "1CB6A7A4-5B9B-403C-B063-13C120F5B334",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGAnQ37m7VSVEPe5Mm6sNBSP7F5o9gvUsiyLGRw42Dza5UGMrEfoAABvRMhLrtELMvZfK51BmzTLwtQqE1Ym6P2aT8iCdzBXCqwQv8UV4uJ9jtmUx5NghMCv6vfyvJ8f1ubtqUufhHMQXEb4VZ5Cm1fCWBg",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"4.427272727272728\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"487.0\",\"primaryColor\":\"16777215\",\"rawDataSize\":\"164964\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUsaGxW5JevxZFmVLLpwy8au5feAUFkw2LBh15ZQYirpRDu7gWNo8Gq4NkfkP8ByiLHMq3sTQznMPbtvMQyW4HpUW2ekNoKw7jqHvERxR5mL6QNRvUuaBuTGkoMcRFrLJLQTs7A8Asj5w8bUV8uf1YH5aaWo/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGAnQ37m7VSVEPe5Mm6sNBSP7F5o9gvUsiyLGRw42Dza5UGMrEfoAABvRMhLrtELMvZfK51BmzTLwtQqE1Ym6P2aT8iCdzBXCqwQv8UV4uJ9jtmUx5NghMCv6vfyvJ8f1ubtqUufhHMQXEb4VZ5Cm1fCWBg/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453743820,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453747427
    },
    {
      "id": "1ED744C2-8335-4F20-BF94-B9EFB79103E8",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "我们都知道如果方法需要对原始值类型变量进行修改，就需要使用ref关键来修饰对应的参数。对于上面定义的Invoke方法，如果我们在FoobarStruct类型的参数args上添加了ref关键字，变量s表示的结构体就可以在这个方法中被修改了。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451979033,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[29,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[50,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[64,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[81,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[89,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452876107
    },
    {
      "id": "1FA3E8E9-15B4-48E8-B035-3B1D9B0DFD26",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于值类型，传递的就是实例本身的内容；对于引用类型，传递的就是实例的地址。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688454510503,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,37]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,37]}],\"color\":\"#00ca85 #00ffb9\",\"decorations\":{\"block\":1,\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688464664265
    },
    {
      "id": "25AC551C-0E05-42EF-B9F7-55042314B7AC",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGApERHJvPu5PnhbiWMJPF6dq5bG8VP6vE134HT5NZFgZdgnTXyirHq2i6QY1KTUh9sasFx1RMbrmRJsWkxaS8ZJfVUhG1aiAp8atHqcWmMcHiofcST9AUC7yjVpgGwVAfja2mRoYoLPyYPgkT8BEnd5vFL",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"0.7934272300469484\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"169.0\",\"primaryColor\":\"4354248\",\"rawDataSize\":\"112230\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUszGcgaqC1mmjCbEw3LMzkh2tDZSEskSBtydrjSmwn7YiTDe9r3d9dnZwzYs7Xb3NG8tD3vmaP4ojR9TZ3cFwRsmTA9aLgWpiTa4XnrwRmhPH1kQAAtzYgHRwn7v7zRdZvqVSXuTU7dmwSCUr1tVa2axuYN/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGApERHJvPu5PnhbiWMJPF6dq5bG8VP6vE134HT5NZFgZdgnTXyirHq2i6QY1KTUh9sasFx1RMbrmRJsWkxaS8ZJfVUhG1aiAp8atHqcWmMcHiofcST9AUC7yjVpgGwVAfja2mRoYoLPyYPgkT8BEnd5vFL/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453640971,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453646904
    },
    {
      "id": "27EF6353-50A2-4825-AAE9-8ACBF44DD608",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于这个问题，绝大部分人都只会给我两个简洁的答案：“值类型分配在栈中，引用类型分配在堆中”，“在默认情况下，值类型参数传值（拷贝），引用类型参数传引用”。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453917130,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453963532
    },
    {
      "id": "28F16089-D889-4046-A5F7-D1D64D2F2138",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "四、ref参数的传递",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451972317,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688451972317
    },
    {
      "id": "2DE5C3D7-57F4-4109-A171-326DE1A1EBAA",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "变量与参数具有不同的内存地址可以通过如下的程序来验证：我们定义了类型分别为FoobarStruct和FoobarClass的两个变量s和c，并将其内存地址打印出来。两个变量作为参数传入Invoke方法中，后者将参数的内存地址打印出来。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451944767,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[37,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[50,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[92,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452854399
    },
    {
      "id": "2EA47A45-04D3-4EFE-9485-2F3968138B93",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "in/ref参数赋予了被调用方法直接修改或者替换原始变量的能力，那么如果我们没有这方面的需求，in/ref参数是否就无用武之地了呢？当然不是，in/ref参数可以避免针对值类型对象的拷贝，如果我们定义了一个较大的结构体，针对该结构体的参数传递将会导致大量的字节拷贝，如果我们使用in/ref参数，传递的字节总是固定的4个（x86）或者8个字节（x64）。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452150755,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[3,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[47,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[50,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[71,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[74,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[139,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[142,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453227925
    },
    {
      "id": "31661E63-B831-403D-A911-4CD815D264B8",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于引用类型来说，变量与其承载的内容则是“分离”的。引用类型的实例分配在堆上，对应的地址存储在变量占据的栈内存上。x64机器使用8个字节表示内存地址，所以c1和c2这两个变量只占据8个字节就很容易理解了。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688454140945,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,57]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,57]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454307903
    },
    {
      "id": "3C6D1FBE-124A-4A5D-9A7A-F8B0AA7A6FD6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "变量和对应的ref参数具有相同的内存地址，这可以通过如下这段程序来证明。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452075647,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[6,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452970107
    },
    {
      "id": "43B5D3A2-F8D2-410E-BD2E-FD496A8E70A6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "二、变量的“值”",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451719003,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688451722626
    },
    {
      "id": "44A92898-B3A0-4B04-A27B-24A961FAD1BC",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如下所示的是程序运行后控制台上的输出结果。可以看出虽然s1和s2、c1和c2虽然具有相同的“值”，但是变量本身具有独立的内存地址。我们可以进一步看出四个变量的地址是“递减的”，这印证了一句话“栈往下生长、堆往上生长”。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451678305,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[96,11]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[96,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688451688177
    },
    {
      "id": "451BE62D-F434-492A-B92E-AA0AC083C481",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "CLR是一个纯粹基于“栈”的虚拟机，所以在IL层面总是采用“压栈”的方式来传递参数，所以不论是引用类型还是值类型的变量，其变量自身都是分配在栈上。而x86机器指令则是基于“栈+寄存器”，所以有些变量可能会最终存储在某个寄存器上，不过这不是这篇文章关注的问题。既然变量分配在栈上，那么它必然映射一个内存地址，指向该地址的指针可以采用如下这个AsPointer方法实现的方式提取出来。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451601738,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[61,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[169,9]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[61,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453970462
    },
    {
      "id": "481A742E-0DFF-4832-AACC-CAE33896A380",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s = new FoobarStruct(255, 1);\nvar c = new FoobarClass(255, 1);\nConsole.WriteLine($\"s   : {Utility.AsPointer(ref s)}\");\nConsole.WriteLine($\"c   : {Utility.AsPointer(ref c)}\");\nInvoke(s, c);\nstatic void Invoke(FoobarStruct args, FoobarClass argc)\n{\n    Console.WriteLine($\"args: {Utility.AsPointer(ref args)}\");\n    Console.WriteLine($\"argc: {Utility.AsPointer(ref argc)}\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451943680,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451954856
    },
    {
      "id": "48652D0D-52B9-41F8-BE9D-9603E186F33F",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "下面这篇文章独辟蹊径，从“变量”的角度讨论值类型和引用类型的区别。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453943110,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"linkURL\":\"https://www.cnblogs.com/artech/p/17509624.html\",\"range\":[2,4]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453947311
    },
    {
      "id": "4F96A667-062D-48B2-8E1B-AD5268113ECF",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于值类型ref参数的作用，几乎所有人都能够理解，但是我发现很多人理解不了引用类型的ref参数。在他们眼中，引用类型的参数传递的就是对象的引用，加上ref关键有什么意义呢？值类型和引用类型的ref参数究竟有什么区别呢？",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451996046,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[5,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[42,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[74,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[95,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454628105
    },
    {
      "id": "501CFC87-CD42-48E0-B473-FFF7D8A078E3",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "虽然c1和c2具有相同的字节内容，又如何确定它们就是我们创建的FoobarClass对象在堆上的内存地址呢？这也可以通过如下的程序来验证：我们创建了一个FoobarClass对象，并将其赋值给变量value。我们调用Read方法确定该变量承载的8个字节，并调用BinaryPrimitives的ReadInt64LittleEndian方法（x86采用小端字节序）转换成long类型，然后进一步转换成IntPtr（nint）类型。指向FoobarClass对象的指针可以通过调用Unsafe的AsPointer方法获得，我们通过“解指针”得到以IntPtr类型表示的内存地址。调式断言可以确认两个IntPtr对象的值是相等的。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451796309,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[31,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[76,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[98,5]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[108,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[130,16]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[147,21]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[185,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[192,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[200,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[217,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[239,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[246,9]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[272,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[298,6]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452752829
    },
    {
      "id": "501D9302-D171-4A9D-A5FF-6DEA4ABCD3F6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如果是值类型，我们相当于我们将这幅画作“真迹”放到盒子中，所以传递的是这副画作的复制品，我们在复制品上所作的任何涂鸦自然不会对真迹造成影响。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452255734,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"block\":1,\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454813920
    },
    {
      "id": "52839CA4-3E96-4971-AE4B-2CB22507CA37",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var c = new FoobarClass(255, 1);\nvar original = c;\nInvoke(ref c);\nDebug.Assert(!ReferenceEquals(original, c));\nDebug.Assert(c.Foo == 0);\nDebug.Assert(c.Bar == 0);\nstatic void Invoke(ref FoobarClass argc)\n{\n    argc = new FoobarClass(0, 0);\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452066620,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452069436
    },
    {
      "id": "5B18F0E2-C752-440C-9A57-B503D8230661",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGKkQLnN7rFnULpAeJLbtvxmr94gNatwDMZH5AQSshbVFyzEPmNKa8fi6oKUvcrPMDkfsZsLACMn4yKv3GMuvKpHb2hh5qLDAJpctrFu1ZpZ6kEeHzz3SSk1Uz3hDcWPZSHZdafu81YCni1U4wKSH14UGEv",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.611111111111111\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"423.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"209832\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUsj4g9LfrF1BE5rxoQCiBXYdNCPeH2Xt98QLge1nmJtgeJGmZKeHSE8UekBjnkaV9hfs1HXwCdRh97xBq5bb4Zde57nphCVcih5QjWNc6EvY4mCbedwiHcC2a8NaYWBtiTA6BqXUu3U7vnA3uQChHP8r34x/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGKkQLnN7rFnULpAeJLbtvxmr94gNatwDMZH5AQSshbVFyzEPmNKa8fi6oKUvcrPMDkfsZsLACMn4yKv3GMuvKpHb2hh5qLDAJpctrFu1ZpZ6kEeHzz3SSk1Uz3hDcWPZSHZdafu81YCni1U4wKSH14UGEv/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453723287,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453728968
    },
    {
      "id": "5D4DC047-F0D9-4933-9DEA-61C965BB9765",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "问题：“谈谈值类型和引用的区别”。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451549331,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688453917134
    },
    {
      "id": "600F828E-9700-4DE6-B1E6-D292C85206FD",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "输出结果：",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452093842,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452093843
    },
    {
      "id": "61D05675-4653-4B2F-883F-C430AE426210",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s = new FoobarStruct(255, 1);\nvar c = new FoobarClass(255, 1);\nInvoke(ref s, ref c);\nDebug.Assert(s.Foo == 0);\nDebug.Assert(s.Bar == 0);\nDebug.Assert(c.Foo == 0);\nDebug.Assert(c.Bar == 0);\n\nstatic void Invoke(ref FoobarStruct args, ref FoobarClass argc)\n{\n    args.Foo = 0;\n    args.Bar = 0;\n    argc.Foo = 0;\n    argc.Bar = 0;\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451962964,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451987891
    },
    {
      "id": "61EC898E-FB45-4BCC-960B-FEF8306B1D6B",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "五、in/out参数",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452134449,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688452134449
    },
    {
      "id": "6C3EF721-1977-41A1-86A7-E04ACFAF88F7",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "在如下的演示程序中，我定义具有相同数据成员的两个类型，其中FoobarStruct为结构体，而FoobarClass为类。我们先后定义了四个变量s1、c1、s2和c2，其中s2和c2的值是由s1和c1赋予的。我们调用上面这个AsPointer方法将四个变量的内存地址打印出来。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451644170,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[29,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[47,11]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[112,9]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452509354
    },
    {
      "id": "759A6572-9387-4D22-838C-62C6B4F3D537",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "internal static class Utility\n{\n    public static unsafe nint AsPointer<T>(ref T value) => new(Unsafe.AsPointer(ref value));\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451599673,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451892013
    },
    {
      "id": "777959B4-D002-4A4A-95F3-CD5422A20975",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "有了这个认识，对于如上这段代码表现出的针对两种类型参数传递的“差异”就不难理解了。如下面的代码片段所示，变量s、c以及Invoke方法的参数args和argc都被分配到栈内存上，虽然s与args，c与argc具有相同的内容，但是针对args的操作将不会对s造成影响，但是针对c和argc的操作最终作用在引用的FoobarClass对象上。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451944766,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[59,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[70,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[75,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[93,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[100,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[116,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[139,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[154,11]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452829905
    },
    {
      "id": "7C15DF0A-6B75-4709-AD22-6B45905EC7DE",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "六、总结",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452255732,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688452255733
    },
    {
      "id": "7D62F80A-6952-4582-8364-42144BFCB5F8",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如果采用基于引用的传递（使用in/ref/out参数，或者针对ref 变量的赋值），相当于我们直接得到了这个盒子。对于值类型，意味着我们得到的也是真迹。不仅如此，我们还可以直接利用一副伪作将其掉包了。如果是值类型，相当于我们将盒子中的真迹换成了赝品。对于引用类型，我们先将赝品放在另一个保险柜中，将盒子中编号替换成这个保险柜的编号。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452255735,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[14,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[17,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[21,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[31,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453415216
    },
    {
      "id": "7EAC58A9-AF5B-4804-BA7E-048E7322B459",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "答案同样是“没有区别”，因为它们传递的就是变量自身的地址罢了（如下所示）。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688454628101,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[6,4]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[21,7]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[6,4]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454632966
    },
    {
      "id": "83FDC289-F12E-44DD-B4EC-A6DDBA6127A6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "由于变量具有唯一的栈内存地址，其类型决定字节大小，所以一个变量可以确定一段连续的栈内存空间，我们在Utility类中定义了如下这个Read方法将这段内存空间的字节内容读取出来。如代码片段所示，我们通过调用Unsafe.SizeOf方法确定字节数量，并据此创建一个字节数组。通过上面定义的AsPointer方法得到变量的地址后，将其传入Marshal的Copy方法将字节内容拷贝到数组中。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451740657,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[49,7]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[65,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[102,13]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[143,9]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[167,7]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[175,4]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[27,18]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[74,9]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[27,18]}],\"decorationStyles\":{},\"decorations\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1749108909243
    },
    {
      "id": "85607EF7-CA0B-48DD-9DB6-9BC0F0CF5686",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对上面演示的这个例子来说，由于s1、c1、 s2和c2是依次定义的，所以它们对应的内存是连续的。不仅如此，我们还可以根据输出的地址计算出四个变量所占的内存大小。具体的布局如下，两个值类型的变量s1和s2占据16个字节，而两个引用类型的变量c1和c2则只占据8个字节。变量",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451740654,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688451740654
    },
    {
      "id": "86219F54-FFA7-4E13-9AC5-151BD728D339",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "三、常规参数的传递",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451867471,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"title\"}",
      "blocks": [],
      "updated": 1688451875039
    },
    {
      "id": "867B6264-9AB3-4CB7-A2F5-F661E960A1E6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于值类型来说，变量与其承载的内容是“一体”的，也就是说变量占据的内存存储的就是它承载的内容。也就是说s1和s2占据的16个字节存储的就是FoobarStruct这个结构体的荷载内容。那么问题又来了，FoobarStruct结构体包含的两个字段的类型分别是byte和long，对应的字节数分别是1和8，总字节数应该是9个字节才对，多出的7个字节是“内存地址对齐（Alignment）”造成的。由于要确保Bar字段基于8个字节的内存对齐，虽然Foo字段只需要使用一个字节，也需要添加7个空白字节。具体的内存布局请求参与相关的文档，在这里就不再赘述了。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451740656,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[69,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[100,12]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[128,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[133,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[181,9]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[220,3]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,47]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,47]}],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454303340
    },
    {
      "id": "8982C438-F3C1-4EE1-BBF2-D805E654B24A",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "两者直接的差异是“没有差异”——当我们将一个变量作为参数传递给某个方法时，传递的总是变量对应的栈内存存储的内容。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688454644778,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454646062
    },
    {
      "id": "8A697B3F-1037-4E3C-B98A-9E5AD234FD83",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "其实这个问题有很大的发挥空间，如果能够从内存布局、GC、互操作、跨AppDomain传递等方面展开，相信会加分不少。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453963527,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[25,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[33,9]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453963527
    },
    {
      "id": "8CAD140F-D1EF-4CDA-9924-0091D5F20A7B",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": ".method assembly hidebysig static\n\tvoid '<<Main>$>g__Invoke|0_0' (\n\t\tint32 arg,\n\t\t[in] int32& inArg,\n\t\tint32& refArg,\n\t\t[out] int32& outArg1,\n\t\t[out] int32& outArg2,\n\t\t[out] int32& outArg3\n\t) cil managed\n{\n\t.custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor() = (\n\t\t01 00 00 00\n\t)\n\t.param [2]\n\t\t.custom instance void [System.Runtime]System.Runtime.CompilerServices.IsReadOnlyAttribute::.ctor() = (\n\t\t\t01 00 00 00\n\t\t)\n\t// Method begins at RVA 0x269e\n\t// Header size: 1\n\t// Code size: 15 (0xf)\n\t.maxstack 8\n\n\t// {\n\tIL_0000: nop\n\t// outArg1 = arg;\n\tIL_0001: ldarg.3\n\tIL_0002: ldarg.0\n\tIL_0003: stind.i4\n\t// outArg2 = inArg;\n\tIL_0004: ldarg.s outArg2\n\tIL_0006: ldarg.1\n\tIL_0007: ldind.i4\n\tIL_0008: stind.i4\n\t// outArg3 = refArg;\n\tIL_0009: ldarg.s outArg3\n\tIL_000b: ldarg.2\n\tIL_000c: ldind.i4\n\tIL_000d: stind.i4\n\t// }\n\tIL_000e: ret\n} // end of method Program::'<<Main>$>g__Invoke|0_0'",
      "rawProperties": "{\"language\":\"other\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452165009,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452201655
    },
    {
      "id": "8ED7DEC5-969C-4164-84E4-8C0BF9B36EA8",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "值得一提的是，如果我们在方法（比如下面的Invoke1）中将ref参数直接赋值给另一个变量，此时又出现了拷贝。如果希望让ref参数和变量指向相同的内存地址，需要按照Invoke2方法那样同时在变量和参数上添加ref关键字。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452093844,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[20,7]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[60,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[82,7]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[104,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453009376
    },
    {
      "id": "934C53CD-21C9-4301-88AF-62AA75C76B17",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s1 = new FoobarStruct(255, 1);\nvar c1 = new FoobarClass(255, 1);\nvar s2 = s1;\nvar c2 = c1;\n\nConsole.WriteLine($\"s1: {BitConverter.ToString(Utility.Read(ref s1))}\");\nConsole.WriteLine($\"c1: {BitConverter.ToString(Utility.Read(ref c1))}\");\nConsole.WriteLine($\"s2: {BitConverter.ToString(Utility.Read(ref s2))}\");\nConsole.WriteLine($\"c2: {BitConverter.ToString(Utility.Read(ref c2))}\");",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451762799,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451908992
    },
    {
      "id": "98419DC6-7C5B-43BB-BF8B-AB4AFE663CEB",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "由于值类型变量和承载内容的“同一性”，所以我们自然可以利用ref参数修改变量承载的实例；引用类型存储的是对象的内存地址，那么我们不仅仅可以通过ref参数修改目标对象，我们还可以按照如下的方式让变量指向另一个对象。当然值类型ref参数也可以采用相同指定一个全新的值赋予变量。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451996048,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[95,10]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[95,10]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[29,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[71,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[111,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452959602
    },
    {
      "id": "9AAFB824-A860-4941-9164-43312FC7B23F",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s = new FoobarStruct(255, 1);\nvar c = new FoobarClass(255, 1);\n\nConsole.WriteLine($\"s   : {Utility.AsPointer(ref s)}\");\nConsole.WriteLine($\"c   : {Utility.AsPointer(ref c)}\");\nInvoke(ref s, ref c);\n\nstatic void Invoke(ref FoobarStruct args, ref FoobarClass argc)\n{\n    Console.WriteLine($\"args: {Utility.AsPointer(ref args)}\");\n    Console.WriteLine($\"argc: {Utility.AsPointer(ref argc)}\");\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452074841,
      "type": "code",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[0,2]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452084009
    },
    {
      "id": "A69DC591-1A6D-41E5-BBEC-B4EF750A7E83",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "static void Invoke1(in FoobarStruct args)\n{\n    args = new FoobarStruct(0, 0);\n}\n\nstatic void Invoke2(in FoobarStruct args)\n{\n    ref var s = ref args;\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452133445,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688453129073
    },
    {
      "id": "A7971584-EA76-42B1-B9D7-3B1DDD903C31",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如下所示的IL代码体现了针对Invoke方法的调用。在对传入参数进行压栈过程中，对于第一个常规参数arg，会执行ldloc.{index}加载变量的值。至于其余5个基于引用/地址的参数，则需要执行ldloca.{index}加载变量的地址。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452216396,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[5,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[14,6]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[49,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[56,13]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[98,14]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[56,13]},{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[98,14]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[56,13]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[98,14]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453336459
    },
    {
      "id": "AA295D00-EDC9-410A-8738-8C269C55D375",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s = new FoobarStruct(255, 1);\nvar c = new FoobarClass(255, 1);\nInvoke(s, c);\nDebug.Assert(s.Foo == 255);\nDebug.Assert(s.Bar == 1);\nDebug.Assert(c.Foo == 0);\nDebug.Assert(c.Bar == 0);\n\nstatic void Invoke(FoobarStruct args, FoobarClass argc)\n{\n    args.Foo = 0;\n    args.Bar = 0;\n    argc.Foo = 0;\n    argc.Bar = 0;\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451916806,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451928503
    },
    {
      "id": "AFB8DF96-5DA4-49C7-BBA0-C5D59655B35A",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "如果是引用类型，我们相当于将真迹存放到保险柜中，将保险柜的编号放到盒子中，那么我们每次从盒子中取出来的是这个编号的复制品，但是系统会自动根据这个编号从所在保险柜中的真迹供你欣赏，如果你想涂鸦的话，就真的毁了这副名画。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453452865,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{\"block\":1,\"focus\":1},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"bullet\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454811049
    },
    {
      "id": "B09D443F-73BA-40E2-A519-8A94BDE68D2F",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHFx7YoJYiaQ3zkR39FzRbGvKrca1XAFiYc3mEgWQX8g8YQFeoChMpugGzXvKsXbcGT1MJHnsqYp2vohKVw6ch7vztptqCkWXBA5gzaxX4Q6ij1DJt26c12d48cuQSUKXuhHioV1zXC1PJXwt9fQmAtXXeJd",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"1.9506172839506173\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"316.0\",\"primaryColor\":\"16777215\",\"rawDataSize\":\"157830\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUssWto9UZq68QG36j8cZtB5EZTR6StJ7KMnAFyT7UDFXqNMFcZoxa1nKfPyASGhoqfpzk7dzutvSAYnX4cE6gkHyUEygNYq2BZ9ef1BaunRBcra7Apfs7bWwV5oTjN1Bs76ybyogd2wQu6uCTRTcj8xKJu8/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHFx7YoJYiaQ3zkR39FzRbGvKrca1XAFiYc3mEgWQX8g8YQFeoChMpugGzXvKsXbcGT1MJHnsqYp2vohKVw6ch7vztptqCkWXBA5gzaxX4Q6ij1DJt26c12d48cuQSUKXuhHioV1zXC1PJXwt9fQmAtXXeJd/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453670859,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453675712
    },
    {
      "id": "BF610EB4-7FE4-433F-A516-8210A287AEAD",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "internal static class Utility\n{\n    public static unsafe byte[] Read<T>(ref T value)\n    {\n        byte[] bytes = new byte[Unsafe.SizeOf<T>()];\n        Marshal.Copy(AsPointer(ref value), bytes, 0, bytes.Length);\n        return bytes;\n    }\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451739451,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451903906
    },
    {
      "id": "C01B91E0-2C2F-44B2-848D-C03F4DA5BA5D",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s = new FoobarStruct(255, 1);\n\nInvoke1(ref s);\nDebug.Assert(s.Foo == 255);\nDebug.Assert(s.Bar == 1);\n\nInvoke2(ref s);\nDebug.Assert(s.Foo == 0);\nDebug.Assert(s.Bar == 0);\nstatic void Invoke1(ref FoobarStruct args)\n{\n    var s = args;\n    s.Foo = 0;\n    s.Bar = 0;\n}\n\nstatic void Invoke2(ref FoobarStruct args)\n{\n    ref var s = ref args;\n    s.Foo = 0;\n    s.Bar = 0;\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452092514,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452108745
    },
    {
      "id": "C82081AC-84BD-416D-B384-A24A76737A41",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var s1 = new FoobarStruct(255, 1);\nvar c1 = new FoobarClass(255, 1);\nvar s2 = s1;\nvar c2 = c1;\n\nConsole.WriteLine($\"s1: {Utility.AsPointer(ref s1)}\");\nConsole.WriteLine($\"c1: {Utility.AsPointer(ref c1)}\");\nConsole.WriteLine($\"s2: {Utility.AsPointer(ref s2)}\");\nConsole.WriteLine($\"c2: {Utility.AsPointer(ref c2)}\");\n\npublic class FoobarClass\n{\n    public byte Foo { get; set; }\n    public long Bar { get; set; }\n    public FoobarClass(byte foo, long bar)\n    {\n        Foo = foo;\n        Bar = bar;\n    }\n}\n\npublic struct FoobarStruct\n{\n    public byte Foo { get; set; }\n    public long Bar { get; set; }\n    public FoobarStruct(byte foo, long bar)\n    {\n        Foo = foo;\n        Bar = bar;\n    }\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451661087,
      "type": "code",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688451896774
    },
    {
      "id": "D26543EC-8754-4765-AE53-A4C4E8CC625F",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "var (arg1, arg2, arg3) = (1,1,1);\nInvoke(arg1, in arg2, ref arg3, out var outArg1, out var outArg2, out var outArg3);\n\nstatic void Invoke(int arg, in int inArg, ref int refArg, out int outArg1, out int outArg2, out int outArg3)\n{\n    outArg1 = arg;\n    outArg2 = inArg;\n    outArg3 = refArg;\n}",
      "rawProperties": "{\"language\":\"cs\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452149752,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452159401
    },
    {
      "id": "D32A4460-4888-43B3-981C-9917B976F276",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "由于ref参数赋予了方法“替换”原始变量的权力，这往往不是调用者希望的，此时就可以使用in关键字。in参数和ref参数在传递变量地址这方面是完全一致的，所以方法可以利用in参数修改原始变量的成员，但是类似于下面这种直接替换变量的行为是不支持的，将一个in参数以ref参数的形式赋值给一个ref变量也是不允许的。通过out关键字定义的输出参数和in/ref参数一样也是传递变量地址，也正是因为这样，方法才能通过参数赋值的方式将其传递给调用者。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452134450,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":true,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[122,32]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[2,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[43,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[49,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[54,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[84,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[125,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[130,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[143,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[157,3]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[171,2]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[174,3]},{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[122,32]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454759171
    },
    {
      "id": "D64F0C7E-FB66-4D86-818D-57FD0D3F593E",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "从如下所示的输出结果可以看出，s1与s2，以及c1和c2承载的字节内容是完全一致的。s1和s2存储的正好是FoobarStruct的两个字段的内容，而且我们还看到了byte类型的Foo字段因“内存对齐”添加的7个空白字节（FF-00-00-00-00-00-00-00）。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451796307,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"highlightColor\":\"#ff7100 #ff6656;#f300ad #ff87b2;g\",\"isBold\":false,\"isCode\":false,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[111,23]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[82,4]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[89,3]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452610012
    },
    {
      "id": "DD26FC0F-1025-4E25-AC74-34A73A3DFE32",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHG5wXjCF5BcsxQeeaT9t1pzw9dXXhj326pR247nMwMMVZLY9GAsiwAaKirLXpTXsespkMJUcBXYXFxpzrDBMHERAMZsC2eQad4GAjswnNCWs9fa9icVoCUSrcFKD31KG7YwGLjUd6ZUT76jWnw5NrmRVXnZ",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.2872340425531914\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"430.0\",\"primaryColor\":\"16777215\",\"rawDataSize\":\"246774\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUsrFPYfPag8x9dRMPxxmv9PF33PynM4L2jWoacXL2sTetYyj8MzfftakXWnwv5ftTeN5mbybjD9E8NHwpGTYtCU4JxDR9z2mCt6XQEam1niRNhLrr18VhXFZtqwWGEwfbbsJzRwCYPFTXQNPT2WLMA2wyWf/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHG5wXjCF5BcsxQeeaT9t1pzw9dXXhj326pR247nMwMMVZLY9GAsiwAaKirLXpTXsespkMJUcBXYXFxpzrDBMHERAMZsC2eQad4GAjswnNCWs9fa9icVoCUSrcFKD31KG7YwGLjUd6ZUT76jWnw5NrmRVXnZ/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453706635,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453710784
    },
    {
      "id": "E2AC1232-A786-4A3D-9A42-02CA588BB21F",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "对于值类型和引用类型在参数传递过程中的差异，如果我们了解了变量的本质，就很好理解了。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451883579,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688454644783
    },
    {
      "id": "E45A1D2A-9D2E-4E63-A664-C8A19D4C800B",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "不论是值类型还是引用类型，变量都是分配在栈（或者寄存器）上，所以每个变量具有一个内存地址，如下这个AsPointer方法通过调用Unsafe.AsPointer方法得到指定变量的指针（void*），然后将其转换成IntPtr(nint)类型。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451601739,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[49,9]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[64,16]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[91,7]},{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[106,12]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452477831
    },
    {
      "id": "E8D566A0-A7E1-4149-9D8A-150EA3E55D99",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": ".method private hidebysig static\n\tvoid '<Main>$' (\n\t\tstring[] args\n\t) cil managed\n{\n\t// Method begins at RVA 0x2670\n\t// Header size: 12\n\t// Code size: 25 (0x19)\n\t.maxstack 6\n\t.entrypoint\n\t.locals init (\n\t\t[0] int32 arg1,\n\t\t[1] int32 arg2,\n\t\t[2] int32 arg3,\n\t\t[3] int32 outArg1,\n\t\t[4] int32 outArg2,\n\t\t[5] int32 outArg3\n\t)\n\n\t// int arg2 = 1;\n\tIL_0000: ldc.i4.1\n\tIL_0001: stloc.0\n\t// int inArg2 = 1;\n\tIL_0002: ldc.i4.1\n\tIL_0003: stloc.1\n\t// int refArg2 = 1;\n\tIL_0004: ldc.i4.1\n\tIL_0005: stloc.2\n\t// Invoke(arg2, in inArg2, ref refArg2, out var _, out var _, out var _);\n\tIL_0006: ldloc.0\n\tIL_0007: ldloca.s 1\n\tIL_0009: ldloca.s 2\n\tIL_000b: ldloca.s 3\n\tIL_000d: ldloca.s 4\n\tIL_000f: ldloca.s 5\n\tIL_0011: call void Program::'<<Main>$>g__Invoke|0_0'(int32, int32&, int32&, int32&, int32&, int32&)\n\t// (no C# code)\n\tIL_0016: nop\n\t// }\n\tIL_0017: nop\n\tIL_0018: ret\n} // end of method Program::'<Main>$'",
      "rawProperties": "{\"language\":\"other\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688452240826,
      "type": "code",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "pluginData": "{\"horizontalSizeClass\":\"regular\",\"pluginConfigurationData\":\"{\\\"themeId\\\":\\\"auto\\\"}\",\"pluginName\":\"codeBlock\",\"surfaceShadowOpacity\":0,\"verticalSizeClass\":\"regular\"}",
      "updated": 1688452244093
    },
    {
      "id": "F013C488-A00A-4F6A-80BE-2FC2150D1B56",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGQuv7YLYQYTgVNDM5ksyXBXuQQeQMQK2TPnyzZ9eCcjxd3X9jEnLzT2phedFf6Ss145FH9wqXpoXWHSyDGRCDnrokkvP3FAHKCLKFs9Yg3yMZgpxvLstijTJfBzEDWye6DaVM3Qn8KRAicVf41DwZ4cYvq",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"2.609271523178808\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"394.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"182736\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUt2YQ6RakDuB5uVbiJZ1SufUD5bUdHQ5Q2D4YppGznH9ePdq2NYfoRUMP8AsLd2T4MNmyaNLGSmjLwY3RujRknD3gSTdhoPwbHzoP78WRGJHY9bcUBNFrbrSn3dEAbtJMAGk76zhHJ7vDK6jVvnZzHTLcp8/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGQuv7YLYQYTgVNDM5ksyXBXuQQeQMQK2TPnyzZ9eCcjxd3X9jEnLzT2phedFf6Ss145FH9wqXpoXWHSyDGRCDnrokkvP3FAHKCLKFs9Yg3yMZgpxvLstijTJfBzEDWye6DaVM3Qn8KRAicVf41DwZ4cYvq/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453758347,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453764220
    },
    {
      "id": "F12AA033-61A6-4CE4-B1ED-D890847E457D",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "C#-值类型vs引用类型【Area】",
      "pageStyleData": "{\"background\":{\"size\":\"full\",\"solidColor\":\"#f7f9f7\",\"type\":\"solid\"},\"isMirrored\":true,\"pageWidthType\":\"true\",\"styleId\":\"luki\"}",
      "rawProperties": "{\"coverImageEnabled\":\"false\",\"hasBeenPagifiedBefore\":\"1\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451460482,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"pageRegular\"}",
      "blocks": [
        "5D4DC047-F0D9-4933-9DEA-61C965BB9765",
        "27EF6353-50A2-4825-AAE9-8ACBF44DD608",
        "8A697B3F-1037-4E3C-B98A-9E5AD234FD83",
        "48652D0D-52B9-41F8-BE9D-9603E186F33F",
        "06EC95CF-4494-4267-BC7C-A755DBC41309",
        "451BE62D-F434-492A-B92E-AA0AC083C481",
        "E45A1D2A-9D2E-4E63-A664-C8A19D4C800B",
        "759A6572-9387-4D22-838C-62C6B4F3D537",
        "6C3EF721-1977-41A1-86A7-E04ACFAF88F7",
        "C82081AC-84BD-416D-B384-A24A76737A41",
        "44A92898-B3A0-4B04-A27B-24A961FAD1BC",
        "06CC8443-0F04-4156-BE57-CBB80CCCA793",
        "43B5D3A2-F8D2-410E-BD2E-FD496A8E70A6",
        "85607EF7-CA0B-48DD-9DB6-9BC0F0CF5686",
        "25AC551C-0E05-42EF-B9F7-55042314B7AC",
        "867B6264-9AB3-4CB7-A2F5-F661E960A1E6",
        "31661E63-B831-403D-A911-4CD815D264B8",
        "B09D443F-73BA-40E2-A519-8A94BDE68D2F",
        "83FDC289-F12E-44DD-B4EC-A6DDBA6127A6",
        "BF610EB4-7FE4-433F-A516-8210A287AEAD",
        "FEA38861-6914-4336-A34E-9F833AD0517D",
        "934C53CD-21C9-4301-88AF-62AA75C76B17",
        "D64F0C7E-FB66-4D86-818D-57FD0D3F593E",
        "F8C49ADF-EA59-478B-808D-67D9E3601873",
        "501CFC87-CD42-48E0-B473-FFF7D8A078E3",
        "0A060FB5-917E-4AB1-87EF-EB5ADC03E588",
        "86219F54-FFA7-4E13-9AC5-151BD728D339",
        "E2AC1232-A786-4A3D-9A42-02CA588BB21F",
        "8982C438-F3C1-4EE1-BBF2-D805E654B24A",
        "1FA3E8E9-15B4-48E8-B035-3B1D9B0DFD26",
        "AA295D00-EDC9-410A-8738-8C269C55D375",
        "777959B4-D002-4A4A-95F3-CD5422A20975",
        "DD26FC0F-1025-4E25-AC74-34A73A3DFE32",
        "2DE5C3D7-57F4-4109-A171-326DE1A1EBAA",
        "481A742E-0DFF-4832-AACC-CAE33896A380",
        "F3A9DF75-DB7D-4415-AB0E-BC2971AC63E6",
        "5B18F0E2-C752-440C-9A57-B503D8230661",
        "28F16089-D889-4046-A5F7-D1D64D2F2138",
        "1ED744C2-8335-4F20-BF94-B9EFB79103E8",
        "61D05675-4653-4B2F-883F-C430AE426210",
        "4F96A667-062D-48B2-8E1B-AD5268113ECF",
        "7EAC58A9-AF5B-4804-BA7E-048E7322B459",
        "1CB6A7A4-5B9B-403C-B063-13C120F5B334",
        "98419DC6-7C5B-43BB-BF8B-AB4AFE663CEB",
        "52839CA4-3E96-4971-AE4B-2CB22507CA37",
        "3C6D1FBE-124A-4A5D-9A7A-F8B0AA7A6FD6",
        "9AAFB824-A860-4941-9164-43312FC7B23F",
        "600F828E-9700-4DE6-B1E6-D292C85206FD",
        "F013C488-A00A-4F6A-80BE-2FC2150D1B56",
        "8ED7DEC5-969C-4164-84E4-8C0BF9B36EA8",
        "C01B91E0-2C2F-44B2-848D-C03F4DA5BA5D",
        "61EC898E-FB45-4BCC-960B-FEF8306B1D6B",
        "D32A4460-4888-43B3-981C-9917B976F276",
        "A69DC591-1A6D-41E5-BBEC-B4EF750A7E83",
        "2EA47A45-04D3-4EFE-9485-2F3968138B93",
        "14ABFFAF-BE91-4A5A-88AE-6247351A6374",
        "D26543EC-8754-4765-AE53-A4C4E8CC625F",
        "1C7798EA-810D-49E1-A2CE-9DF49C2C525C",
        "8CAD140F-D1EF-4CDA-9924-0091D5F20A7B",
        "A7971584-EA76-42B1-B9D7-3B1DDD903C31",
        "E8D566A0-A7E1-4149-9D8A-150EA3E55D99",
        "7C15DF0A-6B75-4709-AD22-6B45905EC7DE",
        "0FFE4745-AD91-4F9C-B6D1-202B774E4876",
        "501D9302-D171-4A9D-A5FF-6DEA4ABCD3F6",
        "AFB8DF96-5DA4-49C7-BBA0-C5D59655B35A",
        "7D62F80A-6952-4582-8364-42144BFCB5F8"
      ],
      "pageStyleProps": "{\"color\":\"#1F2225 #F4F4F4\",\"backdrop\":\"#f7f9f7 #f7f9f7\",\"theme-id\":\"3C07060B-6733-42A8-B033-C8EC0A19272D\",\"card-assets\":\"none\",\"font-family\":\"system\",\"page-width-type\":\"true\",\"separator-style\":\"line\",\"background-color\":\"#FFFFFF #222222\"}",
      "updated": 1750335620150
    },
    {
      "id": "F3A9DF75-DB7D-4415-AB0E-BC2971AC63E6",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "输出结果如下，可以看出变量和对应的参数具有完全不同的内存地址。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451964144,
      "type": "text",
      "style": "{\"_runAttributes\":[],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688451964144
    },
    {
      "id": "F8C49ADF-EA59-478B-808D-67D9E3601873",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGBBkkVKzN2nGyzTGhEnhXph2thRF13hAZfZLxUnqEqwSCK8nsHHZWbRwMrshdHgpVFnKZfpTDNcsBPkcAwYDYmCRLuAGBvXWnNJNHrqVqe7BtQWf6gMXfqq5v8RrkRRgG6jgGBDyEpdeLWBUQL6V45xcjy",
      "pageStyleData": "{}",
      "rawProperties": "{\"aspectRatio\":\"3.198675496688742\",\"fileExtension\":\"tiff\",\"fileName\":\"Image.tiff\",\"isPreviewImageUploaded\":\"true\",\"mimeType\":\"image/tiff\",\"previewImageWidth\":\"483.0\",\"primaryColor\":\"789516\",\"rawDataSize\":\"223054\",\"rawUrl\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdQgFkh7UcdzHFr4ubSdfQAyoKJpaDumNmDuxGB89XTzVbWTfY84apvdGWJS3VhPEL1mk8yYkMXuFZnenquBfj9SaHwoWfbcP4JTvWnefR5ehUUsDwpcYpddtqNuL5TnnRrq1ac9x2BfMe8YWt6MDYfE6aUr9cUTVb1wXwULGr9pSFqjPAze2popNjHXfe9snBsuxMFhwzuYKAux1jXLWNThaacNg7kcxhKvcALBdXNVNSjRMf2E5TFJxVxQEZVScXKe5izJj/Image.jpg\",\"uploaded\":\"true\",\"url\":\"https://secure-res.craft.do/v2/GaWuV1e6K5E1d7GYaNLbZp9g63rvo9MydUVxTZ5h9SdRNJDmdtY4cdy6MYtVEjiuvtm4X2KV2qsKuZtrY8N1ixsnZiAHN58UQ5K8rocHYPSbRaaNEpKwRWaCsjeb2SWALA8dZCMagWB7sLuUECpesSfHGBBkkVKzN2nGyzTGhEnhXph2thRF13hAZfZLxUnqEqwSCK8nsHHZWbRwMrshdHgpVFnKZfpTDNcsBPkcAwYDYmCRLuAGBvXWnNJNHrqVqe7BtQWf6gMXfqq5v8RrkRRgG6jgGBDyEpdeLWBUQL6V45xcjy/Image.jpg\"}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688453691522,
      "type": "image",
      "style": "{\"decorations\":{},\"decorationStyles\":{},\"imageFillStyle\":\"scaleAspectFit\",\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688453698202
    },
    {
      "id": "FEA38861-6914-4336-A34E-9F833AD0517D",
      "documentId": "3D85DC73-28B8-4776-B655-6FD78AC5FA0A",
      "content": "在如下所示的演示程序中，我们依然按照上面的方式定义了四个变量并对它们进行了赋值，这次我们选择调用上面这个Read方法将四个变量的字节内容以16进制的形式打印出来。",
      "rawProperties": "{}",
      "createdByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "modifiedByUserId": "ff47392e-1b37-dd92-268a-2c80735d18e1",
      "created": 1688451763862,
      "type": "text",
      "style": "{\"_runAttributes\":[{\"isBold\":false,\"isCode\":true,\"isItalic\":false,\"isStrikethrough\":false,\"range\":[52,4]}],\"decorations\":{},\"decorationStyles\":{},\"indentationLevel\":0,\"listStyle\":\"none\",\"textStyle\":\"body\"}",
      "blocks": [],
      "updated": 1688452600484
    }
  ],
  "inheritedPageStyle": {
    "pageWidthType": "true",
    "background": {
      "size": "full",
      "solidColor": "#f7f9f7",
      "type": "solid"
    },
    "styleId": "luki",
    "header": {}
  },
  "inheritedPageStyleProps": {
    "color": "#1F2225 #F4F4F4",
    "backdrop": "#f7f9f7 #f7f9f7",
    "theme-id": "3C07060B-6733-42A8-B033-C8EC0A19272D",
    "card-assets": "none",
    "font-family": "system",
    "page-width-type": "true",
    "separator-style": "line",
    "background-color": "#FFFFFF #222222"
  },
  "rootBlockId": "F12AA033-61A6-4CE4-B1ED-D890847E457D",
  "settings": {
    "documentAppearance": "default",
    "hiddenLogo": false,
    "freeTier": false,
    "teamId": "e5336d46-6f5f-1acd-7266-4d0fefce8055",
    "forceSwitches": {}
  },
  "features": {
    "enabled": [
      "fs-show-title",
      "fs-enable-column-view"
    ],
    "disabled": [
      "fs-add-comment",
      "fs-view-comment",
      "fs-object-links",
      "fs-show-author",
      "fs-show-custom-logo",
      "fs-show-duplicate-as-template",
      "fs-hide-logo",
      "fs-hide-table-of-contents",
      "fs-hide-presentation-mode"
    ]
  }
}