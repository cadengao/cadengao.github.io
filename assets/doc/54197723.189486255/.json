{
  "UUID": "54197723.189486255",
  "id": 0,
  "type": null,
  "format": null,
  "title": "在netlify上部署云函数【Resource】",
  "tags": null,
  "slug": null,
  "Tags": null,
  "description": null,
  "cover": null,
  "book_id": 0,
  "BookName": null,
  "public": 0,
  "word_count": 0,
  "created_at": "0001-01-01T00:00:00",
  "updated_at": "0001-01-01T00:00:00",
  "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h1 id=\"BsgHY\"><span class=\"ne-text\">推送代码到github上</span></h1><ol class=\"ne-ol\"><li id=\"uadb7403e\" data-lake-index-type=\"0\"><span class=\"ne-text\">安装node.js</span></li><li id=\"u23fddc6b\" data-lake-index-type=\"0\"><span class=\"ne-text\">执行语句</span><code class=\"ne-code\"><span class=\"ne-text\">npm install mysql2</span></code></li><li id=\"u4ead6212\" data-lake-index-type=\"0\"><span class=\"ne-text\">根目录新建</span><code class=\"ne-code\"><span class=\"ne-text\">netlify.toml</span></code><span class=\"ne-text\">文件和</span><code class=\"ne-code\"><span class=\"ne-text\">functions</span></code><span class=\"ne-text\">目录下</span><code class=\"ne-code\"><span class=\"ne-text\">hello.js</span></code><span class=\"ne-text\">和</span><code class=\"ne-code\"><span class=\"ne-text\">mysql.js</span></code><span class=\"ne-text\">文件</span></li></ol><span style=\"margin-left: 2em\"><pre data-language=\"toml\" id=\"JQrl3\" class=\"ne-codeblock language-toml\"><code>[build] \nfunctions = &quot;functions&quot;</code></pre></span><span style=\"margin-left: 2em\"><pre data-language=\"javascript\" id=\"HPAVm\" class=\"ne-codeblock language-javascript\"><code>const mysql = require('mysql2/promise');\n\n// 获取数据库连接配置\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  port: process.env.DB_PORT,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n};\n\n// 存储 SQL 查询结果的缓存\nlet queryCache = {};\n\nexports.handler = async (event, context) =&gt; {\n  // 解析查询字符串参数\n  const { sql } = event.queryStringParameters || {};\n\n  // 如果传入的 sql 为空，清空缓存\n  if (!sql) {\n    queryCache = {};  // 清空缓存\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*', // 允许的来源\n        'Content-Type': 'application/json' // 设置内容类型\n      },\n      body: JSON.stringify({ message: 'Query cache cleared.' }),\n    };\n  }\n\n  // 返回错误信息，如果 sql 为空或无效\n  if (!sql.trim()) {\n    return {\n      statusCode: 400,\n      headers: {\n        'Access-Control-Allow-Origin': '*', // 允许的来源\n        'Content-Type': 'application/json' // 设置内容类型\n      },\n      body: JSON.stringify({ message: 'SQL query is required.' }),\n    };\n  }\n\n  // 检查缓存中是否已存在查询结果\n  if (queryCache[sql]) {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*', // 允许的来源\n        'Content-Type': 'application/json' // 设置内容类型\n      },\n      body: JSON.stringify(JSON.parse(queryCache[sql])),\n    };\n  }\n\n  try {\n    // 创建数据库连接\n    const connection = await mysql.createConnection(connectionConfig);\n\n    // 执行查询\n    const [rows] = await connection.execute(sql);\n\n    // 将结果存入缓存\n    queryCache[sql] = JSON.stringify(rows);\n\n    // 关闭连接\n    await connection.end();\n\n    // 返回查询结果\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*', // 允许的来源\n        'Content-Type': 'application/json' // 设置内容类型\n      },\n      body: JSON.stringify(rows),\n    };\n  } catch (error) {\n    console.error('Database query error:', error);\n    return {\n      statusCode: 500,\n      headers: {\n        'Access-Control-Allow-Origin': '*', // 允许的来源\n        'Content-Type': 'application/json' // 设置内容类型\n      },\n      body: JSON.stringify({ message: 'Internal Server Error', error: error.message }),\n    };\n  }\n};\n</code></pre></span><ol start=\"4\" class=\"ne-ol\"><li id=\"ue98ab9d2\" data-lake-index-type=\"0\"><span class=\"ne-text\">结构如下图</span></li></ol><p id=\"u1439d32f\" class=\"ne-p\" style=\"margin-left: 2em\"><img src=\"https://file.cadengao.com/assets/doc/54197723.189486255/image/0.png\" width=\"152\" id=\"u6d6bda24\" class=\"ne-image\"></p><h1 id=\"GGJaJ\"><span class=\"ne-text\">在netlify上部署该代码</span></h1><ol class=\"ne-ol\"><li id=\"uc655b7a9\" data-lake-index-type=\"0\"><span class=\"ne-text\">部署完成后，添加环境变量</span></li><li id=\"u31d0fa69\" data-lake-index-type=\"0\"><span class=\"ne-text\">测试</span></li></ol><span style=\"margin-left: 2em\"><pre data-language=\"toml\" id=\"qMqtJ\" class=\"ne-codeblock language-toml\"><code>1、浏览器打开https://cadenbaseapi.netlify.app/.netlify/functions/hello\n   会出现结果\n{&quot;message&quot;:&quot;Hello from Netlify!&quot;}\n\n2、浏览器打开https://cadenbaseapi.netlify.app/.netlify/functions/mysql\n   会出现结果,如果有参数，则后面加上“?sql= select * from tb_doc”\n{&quot;message&quot;: &quot;Query cache cleared.&quot;}\n</code></pre></span></div>",
  "body": null,
  "CosUpdatedAt": "0001-01-01T00:00:00",
  "BodyHtmlCosUrl": null
}