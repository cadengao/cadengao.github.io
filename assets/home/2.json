[
  {
    "UUID": "54197715.182325971",
    "id": 0,
    "type": null,
    "format": null,
    "title": "QT-信号槽机制【Area】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "QT-信号槽机制QT 中的信号和槽机制是一种事件驱动的编程模型，用于在对象之间进行通信。信号是一种特殊的函数，当某个事件发生时会被发射出去，槽是一种函数，用于接收信号并执行相应的操作。使用信号和槽机制需要以下步骤：定义信号：在类中声明一个信号，例如：signals:     void butt...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197715.182328346",
    "id": 0,
    "type": null,
    "format": null,
    "title": "Windbg的使用【Area】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "首先，需要在编译时启用调试信息（/Zi 或 /ZI）和禁用优化（/Od），以便生成可调试的程序。打开Windbg，并在File菜单中选择Open Executable，选择被调试的可执行文件。在Windbg中输入以下命令，启用符号路径：.sympath SRV*C:\\\\Symbols*http...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197715.182937570",
    "id": 0,
    "type": null,
    "format": null,
    "title": "WPF-MVVM(使用ReactiveUI、Prism)【Area】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "ReactiveUI框架的特点：响应式编程ReactiveUI框架使用Rx.NET库，提供了一种基于事件流和数据流的响应式编程模型。开发人员可以使用LINQ查询语法和链式调用来处理事件和数据流，从而实现应用程序的响应式行为。支持多平台ReactiveUI框架支持多种平台，包括WPF、UWP、X...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197715.185438306",
    "id": 0,
    "type": null,
    "format": null,
    "title": "WPF-Prism【Area】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "安装Prism.DryIoc包Prism的初始化过程Prism RegionRegion是Prism当中模块化的核心功能。Region可以理解为View的动态占位符，在View上进行视图占位，其主要目的是弱化模块与模块之间的耦合关系。在一般的界面设计中,界面上的元素及内容往往是被固定，如上图。...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.115104070",
    "id": 0,
    "type": null,
    "format": null,
    "title": "hexo更换markdown渲染器【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "先卸载原来的，默认的为“hexo-renderer-marked”npm un hexo-renderer-marked --save再安装新的npm i hexo-renderer-markdown-it-plus --save最后安装新的渲染器的依赖npm i markdown-it-ch...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.115155527",
    "id": 0,
    "type": null,
    "format": null,
    "title": "魔方总结【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "拼好白面并对齐底层中间块中间块：Ｒ'ＵＦ'Ｕ'角块：Ｒ'Ｄ'ＲＤ拼好白面底层和中间层公式１：ＦＵＦＵＦＵ'Ｆ'Ｕ'Ｆ'公式２：Ｒ'Ｕ'Ｒ'Ｕ'Ｒ'ＵＲＵＲ拼好顶层黄色十字ＦＲＵＲ'Ｕ'Ｆ'拼好顶面黄色放置：黄色十字面非白色块的个数对应“２后４左”小鱼１：Ｒ'Ｕ'ＲＵ'Ｒ'Ｕ2Ｒ，侧面黄色在左，...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.182340326",
    "id": 0,
    "type": null,
    "format": null,
    "title": "frp-内网穿透【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "安装包地址Releases · fatedier/frp服务器端（Ubuntu）下载📎frp_0.48.0_linux_amd64.tar.gzwget https://github.com/fatedier/frp/releases/download/v0.48.0/frp_0.48.0_...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.182340826",
    "id": 0,
    "type": null,
    "format": null,
    "title": "scrcpy-Android投屏【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "介绍scrcpy就是通过adb调试的方式来将手机屏幕投到电脑上，并可以通过电脑控制您的Android设备。它可以通过USB连接，也可以通过Wifi连接（类似于隔空投屏），而且不需要任何root权限，不需要在手机里安装任何程序。scrcpy同时适用于GNU / Linux，Windows和mac...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.182341042",
    "id": 0,
    "type": null,
    "format": null,
    "title": "mac上编译.net core【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "mac上安装.net8下载下图中的安装包，并安装\t或者/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" brew install --cask dotn...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  },
  {
    "UUID": "54197723.182341503",
    "id": 0,
    "type": null,
    "format": null,
    "title": "Matlab使用【Resource】",
    "tags": null,
    "slug": null,
    "Tags": null,
    "description": "matlab5.3_lite单文件（win）📎matlab5.3chs.zipMatlab 变量变量命名原则：以字母或者下划线开头(很少用下划线打头啊)；后面可以跟字母、数字和下划线；变量名区分字母的大小写.Matlab 语句的通常形式变量 = 表达式;表达式是用运算符将有关运算量连接起来的...",
    "cover": null,
    "book_id": 0,
    "BookName": null,
    "public": 0,
    "word_count": 0,
    "created_at": "0001-01-01T00:00:00",
    "updated_at": "0001-01-01T00:00:00",
    "body_html": null,
    "body": null,
    "CosUpdatedAt": "0001-01-01T00:00:00",
    "BodyHtmlCosUrl": null
  }
]